// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: itd_ipd_geometry_msgs.proto

#include "itd_ipd_geometry_msgs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace itd {
namespace communication {
namespace protobuf {
class GeometryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Geometry>
      _instance;
} _Geometry_default_instance_;
class PointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point>
      _instance;
} _Point_default_instance_;
class PointsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Points>
      _instance;
} _Points_default_instance_;
class LineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Line>
      _instance;
} _Line_default_instance_;
class LinesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Lines>
      _instance;
} _Lines_default_instance_;
class PolygonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Polygon>
      _instance;
} _Polygon_default_instance_;
class PolygonsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Polygons>
      _instance;
} _Polygons_default_instance_;
class PoseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pose>
      _instance;
} _Pose_default_instance_;
class PosesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Poses>
      _instance;
} _Poses_default_instance_;
class BoundingBoxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BoundingBox>
      _instance;
} _BoundingBox_default_instance_;
class BoundingBoxesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BoundingBoxes>
      _instance;
} _BoundingBoxes_default_instance_;
class MessageGeometryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageGeometry>
      _instance;
  const ::itd::communication::protobuf::Point* point_;
  const ::itd::communication::protobuf::Points* points_;
  const ::itd::communication::protobuf::Line* line_;
  const ::itd::communication::protobuf::Lines* lines_;
  const ::itd::communication::protobuf::Polygon* polygon_;
  const ::itd::communication::protobuf::Polygons* polygons_;
  const ::itd::communication::protobuf::Pose* pose_;
  const ::itd::communication::protobuf::Poses* poses_;
  const ::itd::communication::protobuf::BoundingBox* boundingbox_;
  const ::itd::communication::protobuf::BoundingBoxes* boundingboxes_;
} _MessageGeometry_default_instance_;
}  // namespace protobuf
}  // namespace communication
}  // namespace itd
namespace protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto {
void InitDefaultsGeometryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::itd::communication::protobuf::_Geometry_default_instance_;
    new (ptr) ::itd::communication::protobuf::Geometry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::itd::communication::protobuf::Geometry::InitAsDefaultInstance();
}

void InitDefaultsGeometry() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGeometryImpl);
}

void InitDefaultsPointImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsHeader();
  {
    void* ptr = &::itd::communication::protobuf::_Point_default_instance_;
    new (ptr) ::itd::communication::protobuf::Point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::itd::communication::protobuf::Point::InitAsDefaultInstance();
}

void InitDefaultsPoint() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPointImpl);
}

void InitDefaultsPointsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsHeader();
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsGeometry();
  {
    void* ptr = &::itd::communication::protobuf::_Points_default_instance_;
    new (ptr) ::itd::communication::protobuf::Points();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::itd::communication::protobuf::Points::InitAsDefaultInstance();
}

void InitDefaultsPoints() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPointsImpl);
}

void InitDefaultsLineImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsHeader();
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsGeometry();
  {
    void* ptr = &::itd::communication::protobuf::_Line_default_instance_;
    new (ptr) ::itd::communication::protobuf::Line();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::itd::communication::protobuf::Line::InitAsDefaultInstance();
}

void InitDefaultsLine() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLineImpl);
}

void InitDefaultsLinesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsHeader();
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsLine();
  {
    void* ptr = &::itd::communication::protobuf::_Lines_default_instance_;
    new (ptr) ::itd::communication::protobuf::Lines();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::itd::communication::protobuf::Lines::InitAsDefaultInstance();
}

void InitDefaultsLines() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLinesImpl);
}

void InitDefaultsPolygonImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsHeader();
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsGeometry();
  {
    void* ptr = &::itd::communication::protobuf::_Polygon_default_instance_;
    new (ptr) ::itd::communication::protobuf::Polygon();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::itd::communication::protobuf::Polygon::InitAsDefaultInstance();
}

void InitDefaultsPolygon() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPolygonImpl);
}

void InitDefaultsPolygonsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsHeader();
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPolygon();
  {
    void* ptr = &::itd::communication::protobuf::_Polygons_default_instance_;
    new (ptr) ::itd::communication::protobuf::Polygons();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::itd::communication::protobuf::Polygons::InitAsDefaultInstance();
}

void InitDefaultsPolygons() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPolygonsImpl);
}

void InitDefaultsPoseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsHeader();
  {
    void* ptr = &::itd::communication::protobuf::_Pose_default_instance_;
    new (ptr) ::itd::communication::protobuf::Pose();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::itd::communication::protobuf::Pose::InitAsDefaultInstance();
}

void InitDefaultsPose() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPoseImpl);
}

void InitDefaultsPosesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsHeader();
  {
    void* ptr = &::itd::communication::protobuf::_Poses_default_instance_;
    new (ptr) ::itd::communication::protobuf::Poses();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::itd::communication::protobuf::Poses::InitAsDefaultInstance();
}

void InitDefaultsPoses() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPosesImpl);
}

void InitDefaultsBoundingBoxImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsHeader();
  {
    void* ptr = &::itd::communication::protobuf::_BoundingBox_default_instance_;
    new (ptr) ::itd::communication::protobuf::BoundingBox();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::itd::communication::protobuf::BoundingBox::InitAsDefaultInstance();
}

void InitDefaultsBoundingBox() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBoundingBoxImpl);
}

void InitDefaultsBoundingBoxesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsHeader();
  {
    void* ptr = &::itd::communication::protobuf::_BoundingBoxes_default_instance_;
    new (ptr) ::itd::communication::protobuf::BoundingBoxes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::itd::communication::protobuf::BoundingBoxes::InitAsDefaultInstance();
}

void InitDefaultsBoundingBoxes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBoundingBoxesImpl);
}

void InitDefaultsMessageGeometryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPoint();
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPoints();
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsLine();
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsLines();
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPolygon();
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPolygons();
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPose();
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPoses();
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsBoundingBox();
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsBoundingBoxes();
  {
    void* ptr = &::itd::communication::protobuf::_MessageGeometry_default_instance_;
    new (ptr) ::itd::communication::protobuf::MessageGeometry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::itd::communication::protobuf::MessageGeometry::InitAsDefaultInstance();
}

void InitDefaultsMessageGeometry() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageGeometryImpl);
}

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Geometry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Geometry, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Geometry, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Geometry, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Geometry, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Point, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Point, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Point, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Point, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Points, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Points, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Points, geometry_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Line, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Line, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Line, geometry_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Lines, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Lines, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Lines, number_lines_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Lines, line_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Polygon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Polygon, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Polygon, geometry_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Polygons, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Polygons, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Polygons, number_polygons_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Polygons, polygon_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Pose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Pose, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Pose, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Pose, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Pose, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Pose, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Pose, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Pose, yaw_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Poses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Poses, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Poses, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Poses, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Poses, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Poses, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Poses, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Poses, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::Poses, yaw_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBox, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBox, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBox, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBox, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBox, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBox, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBox, yaw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBox, l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBox, w_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBox, h_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBox, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBox, data_reserver1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBox, data_reserver2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBoxes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBoxes, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBoxes, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBoxes, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBoxes, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBoxes, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBoxes, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBoxes, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBoxes, yaw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBoxes, l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBoxes, w_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBoxes, h_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBoxes, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBoxes, data_reserver1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::BoundingBoxes, data_reserver2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::MessageGeometry, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::MessageGeometry, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::MessageGeometry, type_),
  offsetof(::itd::communication::protobuf::MessageGeometryDefaultTypeInternal, point_),
  offsetof(::itd::communication::protobuf::MessageGeometryDefaultTypeInternal, points_),
  offsetof(::itd::communication::protobuf::MessageGeometryDefaultTypeInternal, line_),
  offsetof(::itd::communication::protobuf::MessageGeometryDefaultTypeInternal, lines_),
  offsetof(::itd::communication::protobuf::MessageGeometryDefaultTypeInternal, polygon_),
  offsetof(::itd::communication::protobuf::MessageGeometryDefaultTypeInternal, polygons_),
  offsetof(::itd::communication::protobuf::MessageGeometryDefaultTypeInternal, pose_),
  offsetof(::itd::communication::protobuf::MessageGeometryDefaultTypeInternal, poses_),
  offsetof(::itd::communication::protobuf::MessageGeometryDefaultTypeInternal, boundingbox_),
  offsetof(::itd::communication::protobuf::MessageGeometryDefaultTypeInternal, boundingboxes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::itd::communication::protobuf::MessageGeometry, msg_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::itd::communication::protobuf::Geometry)},
  { 9, -1, sizeof(::itd::communication::protobuf::Point)},
  { 18, -1, sizeof(::itd::communication::protobuf::Points)},
  { 25, -1, sizeof(::itd::communication::protobuf::Line)},
  { 32, -1, sizeof(::itd::communication::protobuf::Lines)},
  { 40, -1, sizeof(::itd::communication::protobuf::Polygon)},
  { 47, -1, sizeof(::itd::communication::protobuf::Polygons)},
  { 55, -1, sizeof(::itd::communication::protobuf::Pose)},
  { 67, -1, sizeof(::itd::communication::protobuf::Poses)},
  { 80, -1, sizeof(::itd::communication::protobuf::BoundingBox)},
  { 98, -1, sizeof(::itd::communication::protobuf::BoundingBoxes)},
  { 117, -1, sizeof(::itd::communication::protobuf::MessageGeometry)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::itd::communication::protobuf::_Geometry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::itd::communication::protobuf::_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::itd::communication::protobuf::_Points_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::itd::communication::protobuf::_Line_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::itd::communication::protobuf::_Lines_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::itd::communication::protobuf::_Polygon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::itd::communication::protobuf::_Polygons_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::itd::communication::protobuf::_Pose_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::itd::communication::protobuf::_Poses_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::itd::communication::protobuf::_BoundingBox_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::itd::communication::protobuf::_BoundingBoxes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::itd::communication::protobuf::_MessageGeometry_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "itd_ipd_geometry_msgs.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033itd_ipd_geometry_msgs.proto\022\032itd.commu"
      "nication.protobuf\032\026itd_ipd_std_msgs.prot"
      "o\":\n\010Geometry\022\r\n\005count\030\001 \001(\005\022\t\n\001x\030\002 \003(\002\022"
      "\t\n\001y\030\003 \003(\002\022\t\n\001z\030\004 \003(\002\"\\\n\005Point\0222\n\006header"
      "\030\001 \001(\0132\".itd.communication.protobuf.Head"
      "er\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\022\t\n\001z\030\004 \001(\002\"t\n\006P"
      "oints\0222\n\006header\030\001 \001(\0132\".itd.communicatio"
      "n.protobuf.Header\0226\n\010geometry\030\002 \001(\0132$.it"
      "d.communication.protobuf.Geometry\"r\n\004Lin"
      "e\0222\n\006header\030\001 \001(\0132\".itd.communication.pr"
      "otobuf.Header\0226\n\010geometry\030\002 \001(\0132$.itd.co"
      "mmunication.protobuf.Geometry\"\201\001\n\005Lines\022"
      "2\n\006header\030\001 \001(\0132\".itd.communication.prot"
      "obuf.Header\022\024\n\014number_lines\030\002 \001(\005\022.\n\004lin"
      "e\030\003 \003(\0132 .itd.communication.protobuf.Lin"
      "e\"u\n\007Polygon\0222\n\006header\030\001 \001(\0132\".itd.commu"
      "nication.protobuf.Header\0226\n\010geometry\030\002 \001"
      "(\0132$.itd.communication.protobuf.Geometry"
      "\"\215\001\n\010Polygons\0222\n\006header\030\001 \001(\0132\".itd.comm"
      "unication.protobuf.Header\022\027\n\017number_poly"
      "gons\030\002 \001(\005\0224\n\007polygon\030\003 \003(\0132#.itd.commun"
      "ication.protobuf.Polygon\"\205\001\n\004Pose\0222\n\006hea"
      "der\030\001 \001(\0132\".itd.communication.protobuf.H"
      "eader\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\022\t\n\001z\030\004 \001(\002\022\014"
      "\n\004roll\030\005 \001(\002\022\r\n\005pitch\030\006 \001(\002\022\013\n\003yaw\030\007 \001(\002"
      "\"\226\001\n\005Poses\0222\n\006header\030\001 \001(\0132\".itd.communi"
      "cation.protobuf.Header\022\016\n\006number\030\002 \001(\005\022\t"
      "\n\001x\030\003 \003(\002\022\t\n\001y\030\004 \003(\002\022\t\n\001z\030\005 \003(\002\022\014\n\004roll\030"
      "\006 \003(\002\022\r\n\005pitch\030\007 \003(\002\022\013\n\003yaw\030\010 \003(\002\"\351\001\n\013Bo"
      "undingBox\0222\n\006header\030\001 \001(\0132\".itd.communic"
      "ation.protobuf.Header\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 "
      "\001(\002\022\t\n\001z\030\004 \001(\002\022\014\n\004roll\030\005 \001(\002\022\r\n\005pitch\030\006 "
      "\001(\002\022\013\n\003yaw\030\007 \001(\002\022\t\n\001l\030\010 \001(\002\022\t\n\001w\030\t \001(\002\022\t"
      "\n\001h\030\n \001(\002\022\n\n\002id\030\013 \001(\005\022\026\n\016data_reserver1\030"
      "\014 \001(\002\022\026\n\016data_reserver2\030\r \001(\002\"\373\001\n\rBoundi"
      "ngBoxes\0222\n\006header\030\001 \001(\0132\".itd.communicat"
      "ion.protobuf.Header\022\016\n\006number\030\002 \001(\005\022\t\n\001x"
      "\030\003 \003(\002\022\t\n\001y\030\004 \003(\002\022\t\n\001z\030\005 \003(\002\022\014\n\004roll\030\006 \003"
      "(\002\022\r\n\005pitch\030\007 \003(\002\022\013\n\003yaw\030\010 \003(\002\022\t\n\001l\030\t \003("
      "\002\022\t\n\001w\030\n \003(\002\022\t\n\001h\030\013 \003(\002\022\n\n\002id\030\014 \003(\005\022\026\n\016d"
      "ata_reserver1\030\r \003(\002\022\026\n\016data_reserver2\030\016 "
      "\003(\002\"\233\006\n\017MessageGeometry\022E\n\004type\030\n \001(\01627."
      "itd.communication.protobuf.MessageGeomet"
      "ry.MessageType\0222\n\005point\030\013 \001(\0132!.itd.comm"
      "unication.protobuf.PointH\000\0224\n\006points\030\014 \001"
      "(\0132\".itd.communication.protobuf.PointsH\000"
      "\0220\n\004line\030\r \001(\0132 .itd.communication.proto"
      "buf.LineH\000\0222\n\005lines\030\016 \001(\0132!.itd.communic"
      "ation.protobuf.LinesH\000\0226\n\007polygon\030\017 \001(\0132"
      "#.itd.communication.protobuf.PolygonH\000\0228"
      "\n\010polygons\030\020 \001(\0132$.itd.communication.pro"
      "tobuf.PolygonsH\000\0220\n\004pose\030\021 \001(\0132 .itd.com"
      "munication.protobuf.PoseH\000\0222\n\005poses\030\022 \001("
      "\0132!.itd.communication.protobuf.PosesH\000\022>"
      "\n\013boundingbox\030\023 \001(\0132\'.itd.communication."
      "protobuf.BoundingBoxH\000\022B\n\rboundingboxes\030"
      "\024 \001(\0132).itd.communication.protobuf.Bound"
      "ingBoxesH\000\"\215\001\n\013MessageType\022\t\n\005Point\020\000\022\n\n"
      "\006Points\020\001\022\010\n\004Line\020\002\022\t\n\005Lines\020\003\022\013\n\007Polygo"
      "n\020\004\022\014\n\010Polygons\020\005\022\010\n\004Pose\020\006\022\t\n\005Poses\020\007\022\017"
      "\n\013BoundingBox\020\010\022\021\n\rBoundingBoxes\020\tB\005\n\003ms"
      "gB\003\370\001\001P\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2456);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "itd_ipd_geometry_msgs.proto", &protobuf_RegisterTypes);
  ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto
namespace itd {
namespace communication {
namespace protobuf {
const ::google::protobuf::EnumDescriptor* MessageGeometry_MessageType_descriptor() {
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_enum_descriptors[0];
}
bool MessageGeometry_MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MessageGeometry_MessageType MessageGeometry::Point;
const MessageGeometry_MessageType MessageGeometry::Points;
const MessageGeometry_MessageType MessageGeometry::Line;
const MessageGeometry_MessageType MessageGeometry::Lines;
const MessageGeometry_MessageType MessageGeometry::Polygon;
const MessageGeometry_MessageType MessageGeometry::Polygons;
const MessageGeometry_MessageType MessageGeometry::Pose;
const MessageGeometry_MessageType MessageGeometry::Poses;
const MessageGeometry_MessageType MessageGeometry::BoundingBox;
const MessageGeometry_MessageType MessageGeometry::BoundingBoxes;
const MessageGeometry_MessageType MessageGeometry::MessageType_MIN;
const MessageGeometry_MessageType MessageGeometry::MessageType_MAX;
const int MessageGeometry::MessageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Geometry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Geometry::kCountFieldNumber;
const int Geometry::kXFieldNumber;
const int Geometry::kYFieldNumber;
const int Geometry::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Geometry::Geometry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsGeometry();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:itd.communication.protobuf.Geometry)
}
Geometry::Geometry(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  x_(arena),
  y_(arena),
  z_(arena) {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsGeometry();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:itd.communication.protobuf.Geometry)
}
Geometry::Geometry(const Geometry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      x_(from.x_),
      y_(from.y_),
      z_(from.z_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:itd.communication.protobuf.Geometry)
}

void Geometry::SharedCtor() {
  count_ = 0;
  _cached_size_ = 0;
}

Geometry::~Geometry() {
  // @@protoc_insertion_point(destructor:itd.communication.protobuf.Geometry)
  SharedDtor();
}

void Geometry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Geometry::ArenaDtor(void* object) {
  Geometry* _this = reinterpret_cast< Geometry* >(object);
  (void)_this;
}
void Geometry::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Geometry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Geometry::descriptor() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Geometry& Geometry::default_instance() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsGeometry();
  return *internal_default_instance();
}

Geometry* Geometry::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Geometry>(arena);
}

void Geometry::Clear() {
// @@protoc_insertion_point(message_clear_start:itd.communication.protobuf.Geometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  x_.Clear();
  y_.Clear();
  z_.Clear();
  count_ = 0;
  _internal_metadata_.Clear();
}

bool Geometry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:itd.communication.protobuf.Geometry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_x())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_x())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_y())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_y())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float z = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_z())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_z())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:itd.communication.protobuf.Geometry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:itd.communication.protobuf.Geometry)
  return false;
#undef DO_
}

void Geometry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:itd.communication.protobuf.Geometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->count(), output);
  }

  // repeated float x = 2;
  if (this->x_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _x_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->x().data(), this->x_size(), output);
  }

  // repeated float y = 3;
  if (this->y_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _y_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->y().data(), this->y_size(), output);
  }

  // repeated float z = 4;
  if (this->z_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _z_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->z().data(), this->z_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:itd.communication.protobuf.Geometry)
}

::google::protobuf::uint8* Geometry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:itd.communication.protobuf.Geometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->count(), target);
  }

  // repeated float x = 2;
  if (this->x_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _x_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->x_, target);
  }

  // repeated float y = 3;
  if (this->y_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _y_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->y_, target);
  }

  // repeated float z = 4;
  if (this->z_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _z_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->z_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:itd.communication.protobuf.Geometry)
  return target;
}

size_t Geometry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:itd.communication.protobuf.Geometry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float x = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->x_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _x_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float y = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->y_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _y_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float z = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->z_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _z_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Geometry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:itd.communication.protobuf.Geometry)
  GOOGLE_DCHECK_NE(&from, this);
  const Geometry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Geometry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:itd.communication.protobuf.Geometry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:itd.communication.protobuf.Geometry)
    MergeFrom(*source);
  }
}

void Geometry::MergeFrom(const Geometry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:itd.communication.protobuf.Geometry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  x_.MergeFrom(from.x_);
  y_.MergeFrom(from.y_);
  z_.MergeFrom(from.z_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Geometry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:itd.communication.protobuf.Geometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Geometry::CopyFrom(const Geometry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:itd.communication.protobuf.Geometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Geometry::IsInitialized() const {
  return true;
}

void Geometry::Swap(Geometry* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Geometry* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Geometry::UnsafeArenaSwap(Geometry* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Geometry::InternalSwap(Geometry* other) {
  using std::swap;
  x_.InternalSwap(&other->x_);
  y_.InternalSwap(&other->y_);
  z_.InternalSwap(&other->z_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Geometry::GetMetadata() const {
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Point::InitAsDefaultInstance() {
  ::itd::communication::protobuf::_Point_default_instance_._instance.get_mutable()->header_ = const_cast< ::itd::communication::protobuf::Header*>(
      ::itd::communication::protobuf::Header::internal_default_instance());
}
void Point::_slow_mutable_header() {
  header_ = ::google::protobuf::Arena::CreateMessage< ::itd::communication::protobuf::Header >(
      GetArenaNoVirtual());
}
void Point::unsafe_arena_set_allocated_header(
    ::itd::communication::protobuf::Header* header) {
  if (GetArenaNoVirtual() == NULL) {
    delete header_;
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:itd.communication.protobuf.Point.header)
}
void Point::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point::kHeaderFieldNumber;
const int Point::kXFieldNumber;
const int Point::kYFieldNumber;
const int Point::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point::Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPoint();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:itd.communication.protobuf.Point)
}
Point::Point(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPoint();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:itd.communication.protobuf.Point)
}
Point::Point(const Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::itd::communication::protobuf::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:itd.communication.protobuf.Point)
}

void Point::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&header_)) + sizeof(z_));
  _cached_size_ = 0;
}

Point::~Point() {
  // @@protoc_insertion_point(destructor:itd.communication.protobuf.Point)
  SharedDtor();
}

void Point::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete header_;
}

void Point::ArenaDtor(void* object) {
  Point* _this = reinterpret_cast< Point* >(object);
  (void)_this;
}
void Point::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Point::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point::descriptor() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point& Point::default_instance() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPoint();
  return *internal_default_instance();
}

Point* Point::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Point>(arena);
}

void Point::Clear() {
// @@protoc_insertion_point(message_clear_start:itd.communication.protobuf.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:itd.communication.protobuf.Point)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .itd.communication.protobuf.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:itd.communication.protobuf.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:itd.communication.protobuf.Point)
  return false;
#undef DO_
}

void Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:itd.communication.protobuf.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // float x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // float y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // float z = 4;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:itd.communication.protobuf.Point)
}

::google::protobuf::uint8* Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:itd.communication.protobuf.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // float x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // float y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // float z = 4;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:itd.communication.protobuf.Point)
  return target;
}

size_t Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:itd.communication.protobuf.Point)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // float x = 2;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 3;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 4;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:itd.communication.protobuf.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:itd.communication.protobuf.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:itd.communication.protobuf.Point)
    MergeFrom(*source);
  }
}

void Point::MergeFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:itd.communication.protobuf.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::itd::communication::protobuf::Header::MergeFrom(from.header());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:itd.communication.protobuf.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point::CopyFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:itd.communication.protobuf.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point::IsInitialized() const {
  return true;
}

void Point::Swap(Point* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Point* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Point::UnsafeArenaSwap(Point* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Point::InternalSwap(Point* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point::GetMetadata() const {
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Points::InitAsDefaultInstance() {
  ::itd::communication::protobuf::_Points_default_instance_._instance.get_mutable()->header_ = const_cast< ::itd::communication::protobuf::Header*>(
      ::itd::communication::protobuf::Header::internal_default_instance());
  ::itd::communication::protobuf::_Points_default_instance_._instance.get_mutable()->geometry_ = const_cast< ::itd::communication::protobuf::Geometry*>(
      ::itd::communication::protobuf::Geometry::internal_default_instance());
}
void Points::_slow_mutable_header() {
  header_ = ::google::protobuf::Arena::CreateMessage< ::itd::communication::protobuf::Header >(
      GetArenaNoVirtual());
}
void Points::unsafe_arena_set_allocated_header(
    ::itd::communication::protobuf::Header* header) {
  if (GetArenaNoVirtual() == NULL) {
    delete header_;
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:itd.communication.protobuf.Points.header)
}
void Points::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void Points::_slow_mutable_geometry() {
  geometry_ = ::google::protobuf::Arena::CreateMessage< ::itd::communication::protobuf::Geometry >(
      GetArenaNoVirtual());
}
void Points::unsafe_arena_set_allocated_geometry(
    ::itd::communication::protobuf::Geometry* geometry) {
  if (GetArenaNoVirtual() == NULL) {
    delete geometry_;
  }
  geometry_ = geometry;
  if (geometry) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:itd.communication.protobuf.Points.geometry)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Points::kHeaderFieldNumber;
const int Points::kGeometryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Points::Points()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPoints();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:itd.communication.protobuf.Points)
}
Points::Points(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPoints();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:itd.communication.protobuf.Points)
}
Points::Points(const Points& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::itd::communication::protobuf::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_geometry()) {
    geometry_ = new ::itd::communication::protobuf::Geometry(*from.geometry_);
  } else {
    geometry_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:itd.communication.protobuf.Points)
}

void Points::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&geometry_) -
      reinterpret_cast<char*>(&header_)) + sizeof(geometry_));
  _cached_size_ = 0;
}

Points::~Points() {
  // @@protoc_insertion_point(destructor:itd.communication.protobuf.Points)
  SharedDtor();
}

void Points::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete geometry_;
}

void Points::ArenaDtor(void* object) {
  Points* _this = reinterpret_cast< Points* >(object);
  (void)_this;
}
void Points::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Points::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Points::descriptor() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Points& Points::default_instance() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPoints();
  return *internal_default_instance();
}

Points* Points::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Points>(arena);
}

void Points::Clear() {
// @@protoc_insertion_point(message_clear_start:itd.communication.protobuf.Points)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && geometry_ != NULL) {
    delete geometry_;
  }
  geometry_ = NULL;
  _internal_metadata_.Clear();
}

bool Points::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:itd.communication.protobuf.Points)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .itd.communication.protobuf.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .itd.communication.protobuf.Geometry geometry = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_geometry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:itd.communication.protobuf.Points)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:itd.communication.protobuf.Points)
  return false;
#undef DO_
}

void Points::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:itd.communication.protobuf.Points)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .itd.communication.protobuf.Geometry geometry = 2;
  if (this->has_geometry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->geometry_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:itd.communication.protobuf.Points)
}

::google::protobuf::uint8* Points::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:itd.communication.protobuf.Points)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // .itd.communication.protobuf.Geometry geometry = 2;
  if (this->has_geometry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->geometry_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:itd.communication.protobuf.Points)
  return target;
}

size_t Points::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:itd.communication.protobuf.Points)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // .itd.communication.protobuf.Geometry geometry = 2;
  if (this->has_geometry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->geometry_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Points::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:itd.communication.protobuf.Points)
  GOOGLE_DCHECK_NE(&from, this);
  const Points* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Points>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:itd.communication.protobuf.Points)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:itd.communication.protobuf.Points)
    MergeFrom(*source);
  }
}

void Points::MergeFrom(const Points& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:itd.communication.protobuf.Points)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::itd::communication::protobuf::Header::MergeFrom(from.header());
  }
  if (from.has_geometry()) {
    mutable_geometry()->::itd::communication::protobuf::Geometry::MergeFrom(from.geometry());
  }
}

void Points::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:itd.communication.protobuf.Points)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Points::CopyFrom(const Points& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:itd.communication.protobuf.Points)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Points::IsInitialized() const {
  return true;
}

void Points::Swap(Points* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Points* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Points::UnsafeArenaSwap(Points* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Points::InternalSwap(Points* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(geometry_, other->geometry_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Points::GetMetadata() const {
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Line::InitAsDefaultInstance() {
  ::itd::communication::protobuf::_Line_default_instance_._instance.get_mutable()->header_ = const_cast< ::itd::communication::protobuf::Header*>(
      ::itd::communication::protobuf::Header::internal_default_instance());
  ::itd::communication::protobuf::_Line_default_instance_._instance.get_mutable()->geometry_ = const_cast< ::itd::communication::protobuf::Geometry*>(
      ::itd::communication::protobuf::Geometry::internal_default_instance());
}
void Line::_slow_mutable_header() {
  header_ = ::google::protobuf::Arena::CreateMessage< ::itd::communication::protobuf::Header >(
      GetArenaNoVirtual());
}
void Line::unsafe_arena_set_allocated_header(
    ::itd::communication::protobuf::Header* header) {
  if (GetArenaNoVirtual() == NULL) {
    delete header_;
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:itd.communication.protobuf.Line.header)
}
void Line::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void Line::_slow_mutable_geometry() {
  geometry_ = ::google::protobuf::Arena::CreateMessage< ::itd::communication::protobuf::Geometry >(
      GetArenaNoVirtual());
}
void Line::unsafe_arena_set_allocated_geometry(
    ::itd::communication::protobuf::Geometry* geometry) {
  if (GetArenaNoVirtual() == NULL) {
    delete geometry_;
  }
  geometry_ = geometry;
  if (geometry) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:itd.communication.protobuf.Line.geometry)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Line::kHeaderFieldNumber;
const int Line::kGeometryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Line::Line()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsLine();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:itd.communication.protobuf.Line)
}
Line::Line(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsLine();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:itd.communication.protobuf.Line)
}
Line::Line(const Line& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::itd::communication::protobuf::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_geometry()) {
    geometry_ = new ::itd::communication::protobuf::Geometry(*from.geometry_);
  } else {
    geometry_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:itd.communication.protobuf.Line)
}

void Line::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&geometry_) -
      reinterpret_cast<char*>(&header_)) + sizeof(geometry_));
  _cached_size_ = 0;
}

Line::~Line() {
  // @@protoc_insertion_point(destructor:itd.communication.protobuf.Line)
  SharedDtor();
}

void Line::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete geometry_;
}

void Line::ArenaDtor(void* object) {
  Line* _this = reinterpret_cast< Line* >(object);
  (void)_this;
}
void Line::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Line::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Line::descriptor() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Line& Line::default_instance() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsLine();
  return *internal_default_instance();
}

Line* Line::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Line>(arena);
}

void Line::Clear() {
// @@protoc_insertion_point(message_clear_start:itd.communication.protobuf.Line)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && geometry_ != NULL) {
    delete geometry_;
  }
  geometry_ = NULL;
  _internal_metadata_.Clear();
}

bool Line::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:itd.communication.protobuf.Line)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .itd.communication.protobuf.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .itd.communication.protobuf.Geometry geometry = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_geometry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:itd.communication.protobuf.Line)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:itd.communication.protobuf.Line)
  return false;
#undef DO_
}

void Line::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:itd.communication.protobuf.Line)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .itd.communication.protobuf.Geometry geometry = 2;
  if (this->has_geometry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->geometry_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:itd.communication.protobuf.Line)
}

::google::protobuf::uint8* Line::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:itd.communication.protobuf.Line)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // .itd.communication.protobuf.Geometry geometry = 2;
  if (this->has_geometry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->geometry_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:itd.communication.protobuf.Line)
  return target;
}

size_t Line::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:itd.communication.protobuf.Line)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // .itd.communication.protobuf.Geometry geometry = 2;
  if (this->has_geometry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->geometry_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Line::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:itd.communication.protobuf.Line)
  GOOGLE_DCHECK_NE(&from, this);
  const Line* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Line>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:itd.communication.protobuf.Line)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:itd.communication.protobuf.Line)
    MergeFrom(*source);
  }
}

void Line::MergeFrom(const Line& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:itd.communication.protobuf.Line)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::itd::communication::protobuf::Header::MergeFrom(from.header());
  }
  if (from.has_geometry()) {
    mutable_geometry()->::itd::communication::protobuf::Geometry::MergeFrom(from.geometry());
  }
}

void Line::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:itd.communication.protobuf.Line)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Line::CopyFrom(const Line& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:itd.communication.protobuf.Line)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Line::IsInitialized() const {
  return true;
}

void Line::Swap(Line* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Line* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Line::UnsafeArenaSwap(Line* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Line::InternalSwap(Line* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(geometry_, other->geometry_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Line::GetMetadata() const {
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Lines::InitAsDefaultInstance() {
  ::itd::communication::protobuf::_Lines_default_instance_._instance.get_mutable()->header_ = const_cast< ::itd::communication::protobuf::Header*>(
      ::itd::communication::protobuf::Header::internal_default_instance());
}
void Lines::_slow_mutable_header() {
  header_ = ::google::protobuf::Arena::CreateMessage< ::itd::communication::protobuf::Header >(
      GetArenaNoVirtual());
}
void Lines::unsafe_arena_set_allocated_header(
    ::itd::communication::protobuf::Header* header) {
  if (GetArenaNoVirtual() == NULL) {
    delete header_;
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:itd.communication.protobuf.Lines.header)
}
void Lines::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Lines::kHeaderFieldNumber;
const int Lines::kNumberLinesFieldNumber;
const int Lines::kLineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Lines::Lines()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsLines();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:itd.communication.protobuf.Lines)
}
Lines::Lines(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  line_(arena) {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsLines();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:itd.communication.protobuf.Lines)
}
Lines::Lines(const Lines& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      line_(from.line_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::itd::communication::protobuf::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  number_lines_ = from.number_lines_;
  // @@protoc_insertion_point(copy_constructor:itd.communication.protobuf.Lines)
}

void Lines::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_lines_) -
      reinterpret_cast<char*>(&header_)) + sizeof(number_lines_));
  _cached_size_ = 0;
}

Lines::~Lines() {
  // @@protoc_insertion_point(destructor:itd.communication.protobuf.Lines)
  SharedDtor();
}

void Lines::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete header_;
}

void Lines::ArenaDtor(void* object) {
  Lines* _this = reinterpret_cast< Lines* >(object);
  (void)_this;
}
void Lines::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Lines::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Lines::descriptor() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Lines& Lines::default_instance() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsLines();
  return *internal_default_instance();
}

Lines* Lines::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Lines>(arena);
}

void Lines::Clear() {
// @@protoc_insertion_point(message_clear_start:itd.communication.protobuf.Lines)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  line_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  number_lines_ = 0;
  _internal_metadata_.Clear();
}

bool Lines::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:itd.communication.protobuf.Lines)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .itd.communication.protobuf.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 number_lines = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_lines_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .itd.communication.protobuf.Line line = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:itd.communication.protobuf.Lines)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:itd.communication.protobuf.Lines)
  return false;
#undef DO_
}

void Lines::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:itd.communication.protobuf.Lines)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // int32 number_lines = 2;
  if (this->number_lines() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->number_lines(), output);
  }

  // repeated .itd.communication.protobuf.Line line = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->line_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->line(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:itd.communication.protobuf.Lines)
}

::google::protobuf::uint8* Lines::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:itd.communication.protobuf.Lines)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // int32 number_lines = 2;
  if (this->number_lines() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->number_lines(), target);
  }

  // repeated .itd.communication.protobuf.Line line = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->line_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->line(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:itd.communication.protobuf.Lines)
  return target;
}

size_t Lines::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:itd.communication.protobuf.Lines)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .itd.communication.protobuf.Line line = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->line_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->line(static_cast<int>(i)));
    }
  }

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // int32 number_lines = 2;
  if (this->number_lines() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number_lines());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Lines::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:itd.communication.protobuf.Lines)
  GOOGLE_DCHECK_NE(&from, this);
  const Lines* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Lines>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:itd.communication.protobuf.Lines)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:itd.communication.protobuf.Lines)
    MergeFrom(*source);
  }
}

void Lines::MergeFrom(const Lines& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:itd.communication.protobuf.Lines)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  line_.MergeFrom(from.line_);
  if (from.has_header()) {
    mutable_header()->::itd::communication::protobuf::Header::MergeFrom(from.header());
  }
  if (from.number_lines() != 0) {
    set_number_lines(from.number_lines());
  }
}

void Lines::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:itd.communication.protobuf.Lines)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lines::CopyFrom(const Lines& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:itd.communication.protobuf.Lines)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lines::IsInitialized() const {
  return true;
}

void Lines::Swap(Lines* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Lines* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Lines::UnsafeArenaSwap(Lines* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Lines::InternalSwap(Lines* other) {
  using std::swap;
  line_.InternalSwap(&other->line_);
  swap(header_, other->header_);
  swap(number_lines_, other->number_lines_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Lines::GetMetadata() const {
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Polygon::InitAsDefaultInstance() {
  ::itd::communication::protobuf::_Polygon_default_instance_._instance.get_mutable()->header_ = const_cast< ::itd::communication::protobuf::Header*>(
      ::itd::communication::protobuf::Header::internal_default_instance());
  ::itd::communication::protobuf::_Polygon_default_instance_._instance.get_mutable()->geometry_ = const_cast< ::itd::communication::protobuf::Geometry*>(
      ::itd::communication::protobuf::Geometry::internal_default_instance());
}
void Polygon::_slow_mutable_header() {
  header_ = ::google::protobuf::Arena::CreateMessage< ::itd::communication::protobuf::Header >(
      GetArenaNoVirtual());
}
void Polygon::unsafe_arena_set_allocated_header(
    ::itd::communication::protobuf::Header* header) {
  if (GetArenaNoVirtual() == NULL) {
    delete header_;
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:itd.communication.protobuf.Polygon.header)
}
void Polygon::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void Polygon::_slow_mutable_geometry() {
  geometry_ = ::google::protobuf::Arena::CreateMessage< ::itd::communication::protobuf::Geometry >(
      GetArenaNoVirtual());
}
void Polygon::unsafe_arena_set_allocated_geometry(
    ::itd::communication::protobuf::Geometry* geometry) {
  if (GetArenaNoVirtual() == NULL) {
    delete geometry_;
  }
  geometry_ = geometry;
  if (geometry) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:itd.communication.protobuf.Polygon.geometry)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Polygon::kHeaderFieldNumber;
const int Polygon::kGeometryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Polygon::Polygon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPolygon();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:itd.communication.protobuf.Polygon)
}
Polygon::Polygon(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPolygon();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:itd.communication.protobuf.Polygon)
}
Polygon::Polygon(const Polygon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::itd::communication::protobuf::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_geometry()) {
    geometry_ = new ::itd::communication::protobuf::Geometry(*from.geometry_);
  } else {
    geometry_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:itd.communication.protobuf.Polygon)
}

void Polygon::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&geometry_) -
      reinterpret_cast<char*>(&header_)) + sizeof(geometry_));
  _cached_size_ = 0;
}

Polygon::~Polygon() {
  // @@protoc_insertion_point(destructor:itd.communication.protobuf.Polygon)
  SharedDtor();
}

void Polygon::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete geometry_;
}

void Polygon::ArenaDtor(void* object) {
  Polygon* _this = reinterpret_cast< Polygon* >(object);
  (void)_this;
}
void Polygon::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Polygon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Polygon::descriptor() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Polygon& Polygon::default_instance() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPolygon();
  return *internal_default_instance();
}

Polygon* Polygon::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Polygon>(arena);
}

void Polygon::Clear() {
// @@protoc_insertion_point(message_clear_start:itd.communication.protobuf.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && geometry_ != NULL) {
    delete geometry_;
  }
  geometry_ = NULL;
  _internal_metadata_.Clear();
}

bool Polygon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:itd.communication.protobuf.Polygon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .itd.communication.protobuf.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .itd.communication.protobuf.Geometry geometry = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_geometry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:itd.communication.protobuf.Polygon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:itd.communication.protobuf.Polygon)
  return false;
#undef DO_
}

void Polygon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:itd.communication.protobuf.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .itd.communication.protobuf.Geometry geometry = 2;
  if (this->has_geometry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->geometry_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:itd.communication.protobuf.Polygon)
}

::google::protobuf::uint8* Polygon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:itd.communication.protobuf.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // .itd.communication.protobuf.Geometry geometry = 2;
  if (this->has_geometry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->geometry_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:itd.communication.protobuf.Polygon)
  return target;
}

size_t Polygon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:itd.communication.protobuf.Polygon)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // .itd.communication.protobuf.Geometry geometry = 2;
  if (this->has_geometry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->geometry_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Polygon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:itd.communication.protobuf.Polygon)
  GOOGLE_DCHECK_NE(&from, this);
  const Polygon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Polygon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:itd.communication.protobuf.Polygon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:itd.communication.protobuf.Polygon)
    MergeFrom(*source);
  }
}

void Polygon::MergeFrom(const Polygon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:itd.communication.protobuf.Polygon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::itd::communication::protobuf::Header::MergeFrom(from.header());
  }
  if (from.has_geometry()) {
    mutable_geometry()->::itd::communication::protobuf::Geometry::MergeFrom(from.geometry());
  }
}

void Polygon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:itd.communication.protobuf.Polygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Polygon::CopyFrom(const Polygon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:itd.communication.protobuf.Polygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Polygon::IsInitialized() const {
  return true;
}

void Polygon::Swap(Polygon* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Polygon* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Polygon::UnsafeArenaSwap(Polygon* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Polygon::InternalSwap(Polygon* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(geometry_, other->geometry_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Polygon::GetMetadata() const {
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Polygons::InitAsDefaultInstance() {
  ::itd::communication::protobuf::_Polygons_default_instance_._instance.get_mutable()->header_ = const_cast< ::itd::communication::protobuf::Header*>(
      ::itd::communication::protobuf::Header::internal_default_instance());
}
void Polygons::_slow_mutable_header() {
  header_ = ::google::protobuf::Arena::CreateMessage< ::itd::communication::protobuf::Header >(
      GetArenaNoVirtual());
}
void Polygons::unsafe_arena_set_allocated_header(
    ::itd::communication::protobuf::Header* header) {
  if (GetArenaNoVirtual() == NULL) {
    delete header_;
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:itd.communication.protobuf.Polygons.header)
}
void Polygons::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Polygons::kHeaderFieldNumber;
const int Polygons::kNumberPolygonsFieldNumber;
const int Polygons::kPolygonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Polygons::Polygons()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPolygons();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:itd.communication.protobuf.Polygons)
}
Polygons::Polygons(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  polygon_(arena) {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPolygons();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:itd.communication.protobuf.Polygons)
}
Polygons::Polygons(const Polygons& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      polygon_(from.polygon_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::itd::communication::protobuf::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  number_polygons_ = from.number_polygons_;
  // @@protoc_insertion_point(copy_constructor:itd.communication.protobuf.Polygons)
}

void Polygons::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_polygons_) -
      reinterpret_cast<char*>(&header_)) + sizeof(number_polygons_));
  _cached_size_ = 0;
}

Polygons::~Polygons() {
  // @@protoc_insertion_point(destructor:itd.communication.protobuf.Polygons)
  SharedDtor();
}

void Polygons::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete header_;
}

void Polygons::ArenaDtor(void* object) {
  Polygons* _this = reinterpret_cast< Polygons* >(object);
  (void)_this;
}
void Polygons::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Polygons::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Polygons::descriptor() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Polygons& Polygons::default_instance() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPolygons();
  return *internal_default_instance();
}

Polygons* Polygons::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Polygons>(arena);
}

void Polygons::Clear() {
// @@protoc_insertion_point(message_clear_start:itd.communication.protobuf.Polygons)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  polygon_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  number_polygons_ = 0;
  _internal_metadata_.Clear();
}

bool Polygons::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:itd.communication.protobuf.Polygons)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .itd.communication.protobuf.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 number_polygons = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_polygons_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .itd.communication.protobuf.Polygon polygon = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_polygon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:itd.communication.protobuf.Polygons)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:itd.communication.protobuf.Polygons)
  return false;
#undef DO_
}

void Polygons::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:itd.communication.protobuf.Polygons)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // int32 number_polygons = 2;
  if (this->number_polygons() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->number_polygons(), output);
  }

  // repeated .itd.communication.protobuf.Polygon polygon = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygon_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->polygon(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:itd.communication.protobuf.Polygons)
}

::google::protobuf::uint8* Polygons::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:itd.communication.protobuf.Polygons)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // int32 number_polygons = 2;
  if (this->number_polygons() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->number_polygons(), target);
  }

  // repeated .itd.communication.protobuf.Polygon polygon = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygon_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->polygon(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:itd.communication.protobuf.Polygons)
  return target;
}

size_t Polygons::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:itd.communication.protobuf.Polygons)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .itd.communication.protobuf.Polygon polygon = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->polygon_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->polygon(static_cast<int>(i)));
    }
  }

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // int32 number_polygons = 2;
  if (this->number_polygons() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number_polygons());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Polygons::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:itd.communication.protobuf.Polygons)
  GOOGLE_DCHECK_NE(&from, this);
  const Polygons* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Polygons>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:itd.communication.protobuf.Polygons)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:itd.communication.protobuf.Polygons)
    MergeFrom(*source);
  }
}

void Polygons::MergeFrom(const Polygons& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:itd.communication.protobuf.Polygons)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  polygon_.MergeFrom(from.polygon_);
  if (from.has_header()) {
    mutable_header()->::itd::communication::protobuf::Header::MergeFrom(from.header());
  }
  if (from.number_polygons() != 0) {
    set_number_polygons(from.number_polygons());
  }
}

void Polygons::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:itd.communication.protobuf.Polygons)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Polygons::CopyFrom(const Polygons& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:itd.communication.protobuf.Polygons)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Polygons::IsInitialized() const {
  return true;
}

void Polygons::Swap(Polygons* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Polygons* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Polygons::UnsafeArenaSwap(Polygons* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Polygons::InternalSwap(Polygons* other) {
  using std::swap;
  polygon_.InternalSwap(&other->polygon_);
  swap(header_, other->header_);
  swap(number_polygons_, other->number_polygons_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Polygons::GetMetadata() const {
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Pose::InitAsDefaultInstance() {
  ::itd::communication::protobuf::_Pose_default_instance_._instance.get_mutable()->header_ = const_cast< ::itd::communication::protobuf::Header*>(
      ::itd::communication::protobuf::Header::internal_default_instance());
}
void Pose::_slow_mutable_header() {
  header_ = ::google::protobuf::Arena::CreateMessage< ::itd::communication::protobuf::Header >(
      GetArenaNoVirtual());
}
void Pose::unsafe_arena_set_allocated_header(
    ::itd::communication::protobuf::Header* header) {
  if (GetArenaNoVirtual() == NULL) {
    delete header_;
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:itd.communication.protobuf.Pose.header)
}
void Pose::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pose::kHeaderFieldNumber;
const int Pose::kXFieldNumber;
const int Pose::kYFieldNumber;
const int Pose::kZFieldNumber;
const int Pose::kRollFieldNumber;
const int Pose::kPitchFieldNumber;
const int Pose::kYawFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pose::Pose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPose();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:itd.communication.protobuf.Pose)
}
Pose::Pose(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPose();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:itd.communication.protobuf.Pose)
}
Pose::Pose(const Pose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::itd::communication::protobuf::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&yaw_) -
    reinterpret_cast<char*>(&x_)) + sizeof(yaw_));
  // @@protoc_insertion_point(copy_constructor:itd.communication.protobuf.Pose)
}

void Pose::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yaw_) -
      reinterpret_cast<char*>(&header_)) + sizeof(yaw_));
  _cached_size_ = 0;
}

Pose::~Pose() {
  // @@protoc_insertion_point(destructor:itd.communication.protobuf.Pose)
  SharedDtor();
}

void Pose::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete header_;
}

void Pose::ArenaDtor(void* object) {
  Pose* _this = reinterpret_cast< Pose* >(object);
  (void)_this;
}
void Pose::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Pose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pose::descriptor() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pose& Pose::default_instance() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPose();
  return *internal_default_instance();
}

Pose* Pose::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Pose>(arena);
}

void Pose::Clear() {
// @@protoc_insertion_point(message_clear_start:itd.communication.protobuf.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yaw_) -
      reinterpret_cast<char*>(&x_)) + sizeof(yaw_));
  _internal_metadata_.Clear();
}

bool Pose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:itd.communication.protobuf.Pose)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .itd.communication.protobuf.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float roll = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pitch = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float yaw = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:itd.communication.protobuf.Pose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:itd.communication.protobuf.Pose)
  return false;
#undef DO_
}

void Pose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:itd.communication.protobuf.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // float x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // float y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // float z = 4;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->z(), output);
  }

  // float roll = 5;
  if (this->roll() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->roll(), output);
  }

  // float pitch = 6;
  if (this->pitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->pitch(), output);
  }

  // float yaw = 7;
  if (this->yaw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->yaw(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:itd.communication.protobuf.Pose)
}

::google::protobuf::uint8* Pose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:itd.communication.protobuf.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // float x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // float y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // float z = 4;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->z(), target);
  }

  // float roll = 5;
  if (this->roll() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->roll(), target);
  }

  // float pitch = 6;
  if (this->pitch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->pitch(), target);
  }

  // float yaw = 7;
  if (this->yaw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->yaw(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:itd.communication.protobuf.Pose)
  return target;
}

size_t Pose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:itd.communication.protobuf.Pose)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // float x = 2;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 3;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 4;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // float roll = 5;
  if (this->roll() != 0) {
    total_size += 1 + 4;
  }

  // float pitch = 6;
  if (this->pitch() != 0) {
    total_size += 1 + 4;
  }

  // float yaw = 7;
  if (this->yaw() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:itd.communication.protobuf.Pose)
  GOOGLE_DCHECK_NE(&from, this);
  const Pose* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:itd.communication.protobuf.Pose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:itd.communication.protobuf.Pose)
    MergeFrom(*source);
  }
}

void Pose::MergeFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:itd.communication.protobuf.Pose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::itd::communication::protobuf::Header::MergeFrom(from.header());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.roll() != 0) {
    set_roll(from.roll());
  }
  if (from.pitch() != 0) {
    set_pitch(from.pitch());
  }
  if (from.yaw() != 0) {
    set_yaw(from.yaw());
  }
}

void Pose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:itd.communication.protobuf.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pose::CopyFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:itd.communication.protobuf.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pose::IsInitialized() const {
  return true;
}

void Pose::Swap(Pose* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Pose* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Pose::UnsafeArenaSwap(Pose* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Pose::InternalSwap(Pose* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(roll_, other->roll_);
  swap(pitch_, other->pitch_);
  swap(yaw_, other->yaw_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pose::GetMetadata() const {
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Poses::InitAsDefaultInstance() {
  ::itd::communication::protobuf::_Poses_default_instance_._instance.get_mutable()->header_ = const_cast< ::itd::communication::protobuf::Header*>(
      ::itd::communication::protobuf::Header::internal_default_instance());
}
void Poses::_slow_mutable_header() {
  header_ = ::google::protobuf::Arena::CreateMessage< ::itd::communication::protobuf::Header >(
      GetArenaNoVirtual());
}
void Poses::unsafe_arena_set_allocated_header(
    ::itd::communication::protobuf::Header* header) {
  if (GetArenaNoVirtual() == NULL) {
    delete header_;
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:itd.communication.protobuf.Poses.header)
}
void Poses::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Poses::kHeaderFieldNumber;
const int Poses::kNumberFieldNumber;
const int Poses::kXFieldNumber;
const int Poses::kYFieldNumber;
const int Poses::kZFieldNumber;
const int Poses::kRollFieldNumber;
const int Poses::kPitchFieldNumber;
const int Poses::kYawFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Poses::Poses()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPoses();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:itd.communication.protobuf.Poses)
}
Poses::Poses(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  x_(arena),
  y_(arena),
  z_(arena),
  roll_(arena),
  pitch_(arena),
  yaw_(arena) {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPoses();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:itd.communication.protobuf.Poses)
}
Poses::Poses(const Poses& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      x_(from.x_),
      y_(from.y_),
      z_(from.z_),
      roll_(from.roll_),
      pitch_(from.pitch_),
      yaw_(from.yaw_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::itd::communication::protobuf::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  number_ = from.number_;
  // @@protoc_insertion_point(copy_constructor:itd.communication.protobuf.Poses)
}

void Poses::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_) -
      reinterpret_cast<char*>(&header_)) + sizeof(number_));
  _cached_size_ = 0;
}

Poses::~Poses() {
  // @@protoc_insertion_point(destructor:itd.communication.protobuf.Poses)
  SharedDtor();
}

void Poses::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete header_;
}

void Poses::ArenaDtor(void* object) {
  Poses* _this = reinterpret_cast< Poses* >(object);
  (void)_this;
}
void Poses::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Poses::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Poses::descriptor() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Poses& Poses::default_instance() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsPoses();
  return *internal_default_instance();
}

Poses* Poses::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Poses>(arena);
}

void Poses::Clear() {
// @@protoc_insertion_point(message_clear_start:itd.communication.protobuf.Poses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  x_.Clear();
  y_.Clear();
  z_.Clear();
  roll_.Clear();
  pitch_.Clear();
  yaw_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  number_ = 0;
  _internal_metadata_.Clear();
}

bool Poses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:itd.communication.protobuf.Poses)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .itd.communication.protobuf.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_x())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_x())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_y())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_y())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float z = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_z())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 42u, input, this->mutable_z())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float roll = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_roll())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 50u, input, this->mutable_roll())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float pitch = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_pitch())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 58u, input, this->mutable_pitch())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float yaw = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_yaw())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 66u, input, this->mutable_yaw())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:itd.communication.protobuf.Poses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:itd.communication.protobuf.Poses)
  return false;
#undef DO_
}

void Poses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:itd.communication.protobuf.Poses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // int32 number = 2;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->number(), output);
  }

  // repeated float x = 3;
  if (this->x_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _x_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->x().data(), this->x_size(), output);
  }

  // repeated float y = 4;
  if (this->y_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _y_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->y().data(), this->y_size(), output);
  }

  // repeated float z = 5;
  if (this->z_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _z_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->z().data(), this->z_size(), output);
  }

  // repeated float roll = 6;
  if (this->roll_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _roll_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->roll().data(), this->roll_size(), output);
  }

  // repeated float pitch = 7;
  if (this->pitch_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _pitch_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->pitch().data(), this->pitch_size(), output);
  }

  // repeated float yaw = 8;
  if (this->yaw_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _yaw_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->yaw().data(), this->yaw_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:itd.communication.protobuf.Poses)
}

::google::protobuf::uint8* Poses::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:itd.communication.protobuf.Poses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // int32 number = 2;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->number(), target);
  }

  // repeated float x = 3;
  if (this->x_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _x_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->x_, target);
  }

  // repeated float y = 4;
  if (this->y_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _y_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->y_, target);
  }

  // repeated float z = 5;
  if (this->z_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _z_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->z_, target);
  }

  // repeated float roll = 6;
  if (this->roll_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _roll_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->roll_, target);
  }

  // repeated float pitch = 7;
  if (this->pitch_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _pitch_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->pitch_, target);
  }

  // repeated float yaw = 8;
  if (this->yaw_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _yaw_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->yaw_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:itd.communication.protobuf.Poses)
  return target;
}

size_t Poses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:itd.communication.protobuf.Poses)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float x = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->x_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _x_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float y = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->y_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _y_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float z = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->z_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _z_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float roll = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->roll_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _roll_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float pitch = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->pitch_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pitch_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float yaw = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->yaw_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _yaw_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // int32 number = 2;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Poses::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:itd.communication.protobuf.Poses)
  GOOGLE_DCHECK_NE(&from, this);
  const Poses* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Poses>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:itd.communication.protobuf.Poses)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:itd.communication.protobuf.Poses)
    MergeFrom(*source);
  }
}

void Poses::MergeFrom(const Poses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:itd.communication.protobuf.Poses)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  x_.MergeFrom(from.x_);
  y_.MergeFrom(from.y_);
  z_.MergeFrom(from.z_);
  roll_.MergeFrom(from.roll_);
  pitch_.MergeFrom(from.pitch_);
  yaw_.MergeFrom(from.yaw_);
  if (from.has_header()) {
    mutable_header()->::itd::communication::protobuf::Header::MergeFrom(from.header());
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
}

void Poses::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:itd.communication.protobuf.Poses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Poses::CopyFrom(const Poses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:itd.communication.protobuf.Poses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Poses::IsInitialized() const {
  return true;
}

void Poses::Swap(Poses* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Poses* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Poses::UnsafeArenaSwap(Poses* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Poses::InternalSwap(Poses* other) {
  using std::swap;
  x_.InternalSwap(&other->x_);
  y_.InternalSwap(&other->y_);
  z_.InternalSwap(&other->z_);
  roll_.InternalSwap(&other->roll_);
  pitch_.InternalSwap(&other->pitch_);
  yaw_.InternalSwap(&other->yaw_);
  swap(header_, other->header_);
  swap(number_, other->number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Poses::GetMetadata() const {
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BoundingBox::InitAsDefaultInstance() {
  ::itd::communication::protobuf::_BoundingBox_default_instance_._instance.get_mutable()->header_ = const_cast< ::itd::communication::protobuf::Header*>(
      ::itd::communication::protobuf::Header::internal_default_instance());
}
void BoundingBox::_slow_mutable_header() {
  header_ = ::google::protobuf::Arena::CreateMessage< ::itd::communication::protobuf::Header >(
      GetArenaNoVirtual());
}
void BoundingBox::unsafe_arena_set_allocated_header(
    ::itd::communication::protobuf::Header* header) {
  if (GetArenaNoVirtual() == NULL) {
    delete header_;
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:itd.communication.protobuf.BoundingBox.header)
}
void BoundingBox::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoundingBox::kHeaderFieldNumber;
const int BoundingBox::kXFieldNumber;
const int BoundingBox::kYFieldNumber;
const int BoundingBox::kZFieldNumber;
const int BoundingBox::kRollFieldNumber;
const int BoundingBox::kPitchFieldNumber;
const int BoundingBox::kYawFieldNumber;
const int BoundingBox::kLFieldNumber;
const int BoundingBox::kWFieldNumber;
const int BoundingBox::kHFieldNumber;
const int BoundingBox::kIdFieldNumber;
const int BoundingBox::kDataReserver1FieldNumber;
const int BoundingBox::kDataReserver2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BoundingBox::BoundingBox()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsBoundingBox();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:itd.communication.protobuf.BoundingBox)
}
BoundingBox::BoundingBox(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsBoundingBox();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:itd.communication.protobuf.BoundingBox)
}
BoundingBox::BoundingBox(const BoundingBox& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::itd::communication::protobuf::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&data_reserver2_) -
    reinterpret_cast<char*>(&x_)) + sizeof(data_reserver2_));
  // @@protoc_insertion_point(copy_constructor:itd.communication.protobuf.BoundingBox)
}

void BoundingBox::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_reserver2_) -
      reinterpret_cast<char*>(&header_)) + sizeof(data_reserver2_));
  _cached_size_ = 0;
}

BoundingBox::~BoundingBox() {
  // @@protoc_insertion_point(destructor:itd.communication.protobuf.BoundingBox)
  SharedDtor();
}

void BoundingBox::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete header_;
}

void BoundingBox::ArenaDtor(void* object) {
  BoundingBox* _this = reinterpret_cast< BoundingBox* >(object);
  (void)_this;
}
void BoundingBox::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BoundingBox::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BoundingBox::descriptor() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BoundingBox& BoundingBox::default_instance() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsBoundingBox();
  return *internal_default_instance();
}

BoundingBox* BoundingBox::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<BoundingBox>(arena);
}

void BoundingBox::Clear() {
// @@protoc_insertion_point(message_clear_start:itd.communication.protobuf.BoundingBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_reserver2_) -
      reinterpret_cast<char*>(&x_)) + sizeof(data_reserver2_));
  _internal_metadata_.Clear();
}

bool BoundingBox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:itd.communication.protobuf.BoundingBox)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .itd.communication.protobuf.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float roll = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pitch = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float yaw = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float l = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float w = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float h = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &h_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float data_reserver1 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &data_reserver1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float data_reserver2 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &data_reserver2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:itd.communication.protobuf.BoundingBox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:itd.communication.protobuf.BoundingBox)
  return false;
#undef DO_
}

void BoundingBox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:itd.communication.protobuf.BoundingBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // float x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // float y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // float z = 4;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->z(), output);
  }

  // float roll = 5;
  if (this->roll() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->roll(), output);
  }

  // float pitch = 6;
  if (this->pitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->pitch(), output);
  }

  // float yaw = 7;
  if (this->yaw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->yaw(), output);
  }

  // float l = 8;
  if (this->l() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->l(), output);
  }

  // float w = 9;
  if (this->w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->w(), output);
  }

  // float h = 10;
  if (this->h() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->h(), output);
  }

  // int32 id = 11;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->id(), output);
  }

  // float data_reserver1 = 12;
  if (this->data_reserver1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->data_reserver1(), output);
  }

  // float data_reserver2 = 13;
  if (this->data_reserver2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->data_reserver2(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:itd.communication.protobuf.BoundingBox)
}

::google::protobuf::uint8* BoundingBox::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:itd.communication.protobuf.BoundingBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // float x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // float y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // float z = 4;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->z(), target);
  }

  // float roll = 5;
  if (this->roll() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->roll(), target);
  }

  // float pitch = 6;
  if (this->pitch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->pitch(), target);
  }

  // float yaw = 7;
  if (this->yaw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->yaw(), target);
  }

  // float l = 8;
  if (this->l() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->l(), target);
  }

  // float w = 9;
  if (this->w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->w(), target);
  }

  // float h = 10;
  if (this->h() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->h(), target);
  }

  // int32 id = 11;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->id(), target);
  }

  // float data_reserver1 = 12;
  if (this->data_reserver1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->data_reserver1(), target);
  }

  // float data_reserver2 = 13;
  if (this->data_reserver2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->data_reserver2(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:itd.communication.protobuf.BoundingBox)
  return target;
}

size_t BoundingBox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:itd.communication.protobuf.BoundingBox)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // float x = 2;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 3;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 4;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // float roll = 5;
  if (this->roll() != 0) {
    total_size += 1 + 4;
  }

  // float pitch = 6;
  if (this->pitch() != 0) {
    total_size += 1 + 4;
  }

  // float yaw = 7;
  if (this->yaw() != 0) {
    total_size += 1 + 4;
  }

  // float l = 8;
  if (this->l() != 0) {
    total_size += 1 + 4;
  }

  // float w = 9;
  if (this->w() != 0) {
    total_size += 1 + 4;
  }

  // float h = 10;
  if (this->h() != 0) {
    total_size += 1 + 4;
  }

  // int32 id = 11;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // float data_reserver1 = 12;
  if (this->data_reserver1() != 0) {
    total_size += 1 + 4;
  }

  // float data_reserver2 = 13;
  if (this->data_reserver2() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BoundingBox::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:itd.communication.protobuf.BoundingBox)
  GOOGLE_DCHECK_NE(&from, this);
  const BoundingBox* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BoundingBox>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:itd.communication.protobuf.BoundingBox)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:itd.communication.protobuf.BoundingBox)
    MergeFrom(*source);
  }
}

void BoundingBox::MergeFrom(const BoundingBox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:itd.communication.protobuf.BoundingBox)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::itd::communication::protobuf::Header::MergeFrom(from.header());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.roll() != 0) {
    set_roll(from.roll());
  }
  if (from.pitch() != 0) {
    set_pitch(from.pitch());
  }
  if (from.yaw() != 0) {
    set_yaw(from.yaw());
  }
  if (from.l() != 0) {
    set_l(from.l());
  }
  if (from.w() != 0) {
    set_w(from.w());
  }
  if (from.h() != 0) {
    set_h(from.h());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.data_reserver1() != 0) {
    set_data_reserver1(from.data_reserver1());
  }
  if (from.data_reserver2() != 0) {
    set_data_reserver2(from.data_reserver2());
  }
}

void BoundingBox::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:itd.communication.protobuf.BoundingBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoundingBox::CopyFrom(const BoundingBox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:itd.communication.protobuf.BoundingBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoundingBox::IsInitialized() const {
  return true;
}

void BoundingBox::Swap(BoundingBox* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BoundingBox* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BoundingBox::UnsafeArenaSwap(BoundingBox* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BoundingBox::InternalSwap(BoundingBox* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(roll_, other->roll_);
  swap(pitch_, other->pitch_);
  swap(yaw_, other->yaw_);
  swap(l_, other->l_);
  swap(w_, other->w_);
  swap(h_, other->h_);
  swap(id_, other->id_);
  swap(data_reserver1_, other->data_reserver1_);
  swap(data_reserver2_, other->data_reserver2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BoundingBox::GetMetadata() const {
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BoundingBoxes::InitAsDefaultInstance() {
  ::itd::communication::protobuf::_BoundingBoxes_default_instance_._instance.get_mutable()->header_ = const_cast< ::itd::communication::protobuf::Header*>(
      ::itd::communication::protobuf::Header::internal_default_instance());
}
void BoundingBoxes::_slow_mutable_header() {
  header_ = ::google::protobuf::Arena::CreateMessage< ::itd::communication::protobuf::Header >(
      GetArenaNoVirtual());
}
void BoundingBoxes::unsafe_arena_set_allocated_header(
    ::itd::communication::protobuf::Header* header) {
  if (GetArenaNoVirtual() == NULL) {
    delete header_;
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:itd.communication.protobuf.BoundingBoxes.header)
}
void BoundingBoxes::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoundingBoxes::kHeaderFieldNumber;
const int BoundingBoxes::kNumberFieldNumber;
const int BoundingBoxes::kXFieldNumber;
const int BoundingBoxes::kYFieldNumber;
const int BoundingBoxes::kZFieldNumber;
const int BoundingBoxes::kRollFieldNumber;
const int BoundingBoxes::kPitchFieldNumber;
const int BoundingBoxes::kYawFieldNumber;
const int BoundingBoxes::kLFieldNumber;
const int BoundingBoxes::kWFieldNumber;
const int BoundingBoxes::kHFieldNumber;
const int BoundingBoxes::kIdFieldNumber;
const int BoundingBoxes::kDataReserver1FieldNumber;
const int BoundingBoxes::kDataReserver2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BoundingBoxes::BoundingBoxes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsBoundingBoxes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:itd.communication.protobuf.BoundingBoxes)
}
BoundingBoxes::BoundingBoxes(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  x_(arena),
  y_(arena),
  z_(arena),
  roll_(arena),
  pitch_(arena),
  yaw_(arena),
  l_(arena),
  w_(arena),
  h_(arena),
  id_(arena),
  data_reserver1_(arena),
  data_reserver2_(arena) {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsBoundingBoxes();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:itd.communication.protobuf.BoundingBoxes)
}
BoundingBoxes::BoundingBoxes(const BoundingBoxes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      x_(from.x_),
      y_(from.y_),
      z_(from.z_),
      roll_(from.roll_),
      pitch_(from.pitch_),
      yaw_(from.yaw_),
      l_(from.l_),
      w_(from.w_),
      h_(from.h_),
      id_(from.id_),
      data_reserver1_(from.data_reserver1_),
      data_reserver2_(from.data_reserver2_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::itd::communication::protobuf::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  number_ = from.number_;
  // @@protoc_insertion_point(copy_constructor:itd.communication.protobuf.BoundingBoxes)
}

void BoundingBoxes::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_) -
      reinterpret_cast<char*>(&header_)) + sizeof(number_));
  _cached_size_ = 0;
}

BoundingBoxes::~BoundingBoxes() {
  // @@protoc_insertion_point(destructor:itd.communication.protobuf.BoundingBoxes)
  SharedDtor();
}

void BoundingBoxes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete header_;
}

void BoundingBoxes::ArenaDtor(void* object) {
  BoundingBoxes* _this = reinterpret_cast< BoundingBoxes* >(object);
  (void)_this;
}
void BoundingBoxes::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BoundingBoxes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BoundingBoxes::descriptor() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BoundingBoxes& BoundingBoxes::default_instance() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsBoundingBoxes();
  return *internal_default_instance();
}

BoundingBoxes* BoundingBoxes::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<BoundingBoxes>(arena);
}

void BoundingBoxes::Clear() {
// @@protoc_insertion_point(message_clear_start:itd.communication.protobuf.BoundingBoxes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  x_.Clear();
  y_.Clear();
  z_.Clear();
  roll_.Clear();
  pitch_.Clear();
  yaw_.Clear();
  l_.Clear();
  w_.Clear();
  h_.Clear();
  id_.Clear();
  data_reserver1_.Clear();
  data_reserver2_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  number_ = 0;
  _internal_metadata_.Clear();
}

bool BoundingBoxes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:itd.communication.protobuf.BoundingBoxes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .itd.communication.protobuf.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_x())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_x())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_y())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_y())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float z = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_z())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 42u, input, this->mutable_z())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float roll = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_roll())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 50u, input, this->mutable_roll())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float pitch = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_pitch())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 58u, input, this->mutable_pitch())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float yaw = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_yaw())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 66u, input, this->mutable_yaw())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float l = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_l())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 74u, input, this->mutable_l())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float w = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 82u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float h = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_h())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 90u, input, this->mutable_h())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 98u, input, this->mutable_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float data_reserver1 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_data_reserver1())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 106u, input, this->mutable_data_reserver1())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float data_reserver2 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_data_reserver2())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 114u, input, this->mutable_data_reserver2())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:itd.communication.protobuf.BoundingBoxes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:itd.communication.protobuf.BoundingBoxes)
  return false;
#undef DO_
}

void BoundingBoxes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:itd.communication.protobuf.BoundingBoxes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // int32 number = 2;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->number(), output);
  }

  // repeated float x = 3;
  if (this->x_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _x_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->x().data(), this->x_size(), output);
  }

  // repeated float y = 4;
  if (this->y_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _y_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->y().data(), this->y_size(), output);
  }

  // repeated float z = 5;
  if (this->z_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _z_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->z().data(), this->z_size(), output);
  }

  // repeated float roll = 6;
  if (this->roll_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _roll_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->roll().data(), this->roll_size(), output);
  }

  // repeated float pitch = 7;
  if (this->pitch_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _pitch_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->pitch().data(), this->pitch_size(), output);
  }

  // repeated float yaw = 8;
  if (this->yaw_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _yaw_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->yaw().data(), this->yaw_size(), output);
  }

  // repeated float l = 9;
  if (this->l_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _l_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->l().data(), this->l_size(), output);
  }

  // repeated float w = 10;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->w().data(), this->w_size(), output);
  }

  // repeated float h = 11;
  if (this->h_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _h_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->h().data(), this->h_size(), output);
  }

  // repeated int32 id = 12;
  if (this->id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _id_cached_byte_size_));
  }
  for (int i = 0, n = this->id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->id(i), output);
  }

  // repeated float data_reserver1 = 13;
  if (this->data_reserver1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _data_reserver1_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->data_reserver1().data(), this->data_reserver1_size(), output);
  }

  // repeated float data_reserver2 = 14;
  if (this->data_reserver2_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _data_reserver2_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->data_reserver2().data(), this->data_reserver2_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:itd.communication.protobuf.BoundingBoxes)
}

::google::protobuf::uint8* BoundingBoxes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:itd.communication.protobuf.BoundingBoxes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // int32 number = 2;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->number(), target);
  }

  // repeated float x = 3;
  if (this->x_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _x_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->x_, target);
  }

  // repeated float y = 4;
  if (this->y_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _y_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->y_, target);
  }

  // repeated float z = 5;
  if (this->z_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _z_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->z_, target);
  }

  // repeated float roll = 6;
  if (this->roll_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _roll_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->roll_, target);
  }

  // repeated float pitch = 7;
  if (this->pitch_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _pitch_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->pitch_, target);
  }

  // repeated float yaw = 8;
  if (this->yaw_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _yaw_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->yaw_, target);
  }

  // repeated float l = 9;
  if (this->l_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _l_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->l_, target);
  }

  // repeated float w = 10;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->w_, target);
  }

  // repeated float h = 11;
  if (this->h_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _h_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->h_, target);
  }

  // repeated int32 id = 12;
  if (this->id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _id_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->id_, target);
  }

  // repeated float data_reserver1 = 13;
  if (this->data_reserver1_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _data_reserver1_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->data_reserver1_, target);
  }

  // repeated float data_reserver2 = 14;
  if (this->data_reserver2_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _data_reserver2_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->data_reserver2_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:itd.communication.protobuf.BoundingBoxes)
  return target;
}

size_t BoundingBoxes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:itd.communication.protobuf.BoundingBoxes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float x = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->x_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _x_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float y = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->y_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _y_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float z = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->z_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _z_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float roll = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->roll_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _roll_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float pitch = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->pitch_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pitch_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float yaw = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->yaw_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _yaw_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float l = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->l_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _l_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float w = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float h = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->h_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _h_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 id = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->id_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _id_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float data_reserver1 = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->data_reserver1_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _data_reserver1_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float data_reserver2 = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->data_reserver2_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _data_reserver2_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .itd.communication.protobuf.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // int32 number = 2;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BoundingBoxes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:itd.communication.protobuf.BoundingBoxes)
  GOOGLE_DCHECK_NE(&from, this);
  const BoundingBoxes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BoundingBoxes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:itd.communication.protobuf.BoundingBoxes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:itd.communication.protobuf.BoundingBoxes)
    MergeFrom(*source);
  }
}

void BoundingBoxes::MergeFrom(const BoundingBoxes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:itd.communication.protobuf.BoundingBoxes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  x_.MergeFrom(from.x_);
  y_.MergeFrom(from.y_);
  z_.MergeFrom(from.z_);
  roll_.MergeFrom(from.roll_);
  pitch_.MergeFrom(from.pitch_);
  yaw_.MergeFrom(from.yaw_);
  l_.MergeFrom(from.l_);
  w_.MergeFrom(from.w_);
  h_.MergeFrom(from.h_);
  id_.MergeFrom(from.id_);
  data_reserver1_.MergeFrom(from.data_reserver1_);
  data_reserver2_.MergeFrom(from.data_reserver2_);
  if (from.has_header()) {
    mutable_header()->::itd::communication::protobuf::Header::MergeFrom(from.header());
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
}

void BoundingBoxes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:itd.communication.protobuf.BoundingBoxes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoundingBoxes::CopyFrom(const BoundingBoxes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:itd.communication.protobuf.BoundingBoxes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoundingBoxes::IsInitialized() const {
  return true;
}

void BoundingBoxes::Swap(BoundingBoxes* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BoundingBoxes* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BoundingBoxes::UnsafeArenaSwap(BoundingBoxes* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BoundingBoxes::InternalSwap(BoundingBoxes* other) {
  using std::swap;
  x_.InternalSwap(&other->x_);
  y_.InternalSwap(&other->y_);
  z_.InternalSwap(&other->z_);
  roll_.InternalSwap(&other->roll_);
  pitch_.InternalSwap(&other->pitch_);
  yaw_.InternalSwap(&other->yaw_);
  l_.InternalSwap(&other->l_);
  w_.InternalSwap(&other->w_);
  h_.InternalSwap(&other->h_);
  id_.InternalSwap(&other->id_);
  data_reserver1_.InternalSwap(&other->data_reserver1_);
  data_reserver2_.InternalSwap(&other->data_reserver2_);
  swap(header_, other->header_);
  swap(number_, other->number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BoundingBoxes::GetMetadata() const {
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageGeometry::InitAsDefaultInstance() {
  ::itd::communication::protobuf::_MessageGeometry_default_instance_.point_ = const_cast< ::itd::communication::protobuf::Point*>(
      ::itd::communication::protobuf::Point::internal_default_instance());
  ::itd::communication::protobuf::_MessageGeometry_default_instance_.points_ = const_cast< ::itd::communication::protobuf::Points*>(
      ::itd::communication::protobuf::Points::internal_default_instance());
  ::itd::communication::protobuf::_MessageGeometry_default_instance_.line_ = const_cast< ::itd::communication::protobuf::Line*>(
      ::itd::communication::protobuf::Line::internal_default_instance());
  ::itd::communication::protobuf::_MessageGeometry_default_instance_.lines_ = const_cast< ::itd::communication::protobuf::Lines*>(
      ::itd::communication::protobuf::Lines::internal_default_instance());
  ::itd::communication::protobuf::_MessageGeometry_default_instance_.polygon_ = const_cast< ::itd::communication::protobuf::Polygon*>(
      ::itd::communication::protobuf::Polygon::internal_default_instance());
  ::itd::communication::protobuf::_MessageGeometry_default_instance_.polygons_ = const_cast< ::itd::communication::protobuf::Polygons*>(
      ::itd::communication::protobuf::Polygons::internal_default_instance());
  ::itd::communication::protobuf::_MessageGeometry_default_instance_.pose_ = const_cast< ::itd::communication::protobuf::Pose*>(
      ::itd::communication::protobuf::Pose::internal_default_instance());
  ::itd::communication::protobuf::_MessageGeometry_default_instance_.poses_ = const_cast< ::itd::communication::protobuf::Poses*>(
      ::itd::communication::protobuf::Poses::internal_default_instance());
  ::itd::communication::protobuf::_MessageGeometry_default_instance_.boundingbox_ = const_cast< ::itd::communication::protobuf::BoundingBox*>(
      ::itd::communication::protobuf::BoundingBox::internal_default_instance());
  ::itd::communication::protobuf::_MessageGeometry_default_instance_.boundingboxes_ = const_cast< ::itd::communication::protobuf::BoundingBoxes*>(
      ::itd::communication::protobuf::BoundingBoxes::internal_default_instance());
}
void MessageGeometry::set_allocated_point(::itd::communication::protobuf::Point* point) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (point) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(point);
    if (message_arena != submessage_arena) {
      point = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, point, submessage_arena);
    }
    set_has_point();
    msg_.point_ = point;
  }
  // @@protoc_insertion_point(field_set_allocated:itd.communication.protobuf.MessageGeometry.point)
}
void MessageGeometry::set_allocated_points(::itd::communication::protobuf::Points* points) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (points) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(points);
    if (message_arena != submessage_arena) {
      points = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, points, submessage_arena);
    }
    set_has_points();
    msg_.points_ = points;
  }
  // @@protoc_insertion_point(field_set_allocated:itd.communication.protobuf.MessageGeometry.points)
}
void MessageGeometry::set_allocated_line(::itd::communication::protobuf::Line* line) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (line) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(line);
    if (message_arena != submessage_arena) {
      line = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, line, submessage_arena);
    }
    set_has_line();
    msg_.line_ = line;
  }
  // @@protoc_insertion_point(field_set_allocated:itd.communication.protobuf.MessageGeometry.line)
}
void MessageGeometry::set_allocated_lines(::itd::communication::protobuf::Lines* lines) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (lines) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(lines);
    if (message_arena != submessage_arena) {
      lines = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lines, submessage_arena);
    }
    set_has_lines();
    msg_.lines_ = lines;
  }
  // @@protoc_insertion_point(field_set_allocated:itd.communication.protobuf.MessageGeometry.lines)
}
void MessageGeometry::set_allocated_polygon(::itd::communication::protobuf::Polygon* polygon) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (polygon) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(polygon);
    if (message_arena != submessage_arena) {
      polygon = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, polygon, submessage_arena);
    }
    set_has_polygon();
    msg_.polygon_ = polygon;
  }
  // @@protoc_insertion_point(field_set_allocated:itd.communication.protobuf.MessageGeometry.polygon)
}
void MessageGeometry::set_allocated_polygons(::itd::communication::protobuf::Polygons* polygons) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (polygons) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(polygons);
    if (message_arena != submessage_arena) {
      polygons = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, polygons, submessage_arena);
    }
    set_has_polygons();
    msg_.polygons_ = polygons;
  }
  // @@protoc_insertion_point(field_set_allocated:itd.communication.protobuf.MessageGeometry.polygons)
}
void MessageGeometry::set_allocated_pose(::itd::communication::protobuf::Pose* pose) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (pose) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(pose);
    if (message_arena != submessage_arena) {
      pose = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pose, submessage_arena);
    }
    set_has_pose();
    msg_.pose_ = pose;
  }
  // @@protoc_insertion_point(field_set_allocated:itd.communication.protobuf.MessageGeometry.pose)
}
void MessageGeometry::set_allocated_poses(::itd::communication::protobuf::Poses* poses) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (poses) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(poses);
    if (message_arena != submessage_arena) {
      poses = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, poses, submessage_arena);
    }
    set_has_poses();
    msg_.poses_ = poses;
  }
  // @@protoc_insertion_point(field_set_allocated:itd.communication.protobuf.MessageGeometry.poses)
}
void MessageGeometry::set_allocated_boundingbox(::itd::communication::protobuf::BoundingBox* boundingbox) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (boundingbox) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(boundingbox);
    if (message_arena != submessage_arena) {
      boundingbox = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, boundingbox, submessage_arena);
    }
    set_has_boundingbox();
    msg_.boundingbox_ = boundingbox;
  }
  // @@protoc_insertion_point(field_set_allocated:itd.communication.protobuf.MessageGeometry.boundingbox)
}
void MessageGeometry::set_allocated_boundingboxes(::itd::communication::protobuf::BoundingBoxes* boundingboxes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (boundingboxes) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(boundingboxes);
    if (message_arena != submessage_arena) {
      boundingboxes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, boundingboxes, submessage_arena);
    }
    set_has_boundingboxes();
    msg_.boundingboxes_ = boundingboxes;
  }
  // @@protoc_insertion_point(field_set_allocated:itd.communication.protobuf.MessageGeometry.boundingboxes)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageGeometry::kTypeFieldNumber;
const int MessageGeometry::kPointFieldNumber;
const int MessageGeometry::kPointsFieldNumber;
const int MessageGeometry::kLineFieldNumber;
const int MessageGeometry::kLinesFieldNumber;
const int MessageGeometry::kPolygonFieldNumber;
const int MessageGeometry::kPolygonsFieldNumber;
const int MessageGeometry::kPoseFieldNumber;
const int MessageGeometry::kPosesFieldNumber;
const int MessageGeometry::kBoundingboxFieldNumber;
const int MessageGeometry::kBoundingboxesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageGeometry::MessageGeometry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsMessageGeometry();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:itd.communication.protobuf.MessageGeometry)
}
MessageGeometry::MessageGeometry(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsMessageGeometry();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:itd.communication.protobuf.MessageGeometry)
}
MessageGeometry::MessageGeometry(const MessageGeometry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  clear_has_msg();
  switch (from.msg_case()) {
    case kPoint: {
      mutable_point()->::itd::communication::protobuf::Point::MergeFrom(from.point());
      break;
    }
    case kPoints: {
      mutable_points()->::itd::communication::protobuf::Points::MergeFrom(from.points());
      break;
    }
    case kLine: {
      mutable_line()->::itd::communication::protobuf::Line::MergeFrom(from.line());
      break;
    }
    case kLines: {
      mutable_lines()->::itd::communication::protobuf::Lines::MergeFrom(from.lines());
      break;
    }
    case kPolygon: {
      mutable_polygon()->::itd::communication::protobuf::Polygon::MergeFrom(from.polygon());
      break;
    }
    case kPolygons: {
      mutable_polygons()->::itd::communication::protobuf::Polygons::MergeFrom(from.polygons());
      break;
    }
    case kPose: {
      mutable_pose()->::itd::communication::protobuf::Pose::MergeFrom(from.pose());
      break;
    }
    case kPoses: {
      mutable_poses()->::itd::communication::protobuf::Poses::MergeFrom(from.poses());
      break;
    }
    case kBoundingbox: {
      mutable_boundingbox()->::itd::communication::protobuf::BoundingBox::MergeFrom(from.boundingbox());
      break;
    }
    case kBoundingboxes: {
      mutable_boundingboxes()->::itd::communication::protobuf::BoundingBoxes::MergeFrom(from.boundingboxes());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:itd.communication.protobuf.MessageGeometry)
}

void MessageGeometry::SharedCtor() {
  type_ = 0;
  clear_has_msg();
  _cached_size_ = 0;
}

MessageGeometry::~MessageGeometry() {
  // @@protoc_insertion_point(destructor:itd.communication.protobuf.MessageGeometry)
  SharedDtor();
}

void MessageGeometry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_msg()) {
    clear_msg();
  }
}

void MessageGeometry::ArenaDtor(void* object) {
  MessageGeometry* _this = reinterpret_cast< MessageGeometry* >(object);
  (void)_this;
}
void MessageGeometry::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MessageGeometry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageGeometry::descriptor() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageGeometry& MessageGeometry::default_instance() {
  ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::InitDefaultsMessageGeometry();
  return *internal_default_instance();
}

MessageGeometry* MessageGeometry::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<MessageGeometry>(arena);
}

void MessageGeometry::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:itd.communication.protobuf.MessageGeometry)
  switch (msg_case()) {
    case kPoint: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.point_;
      }
      break;
    }
    case kPoints: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.points_;
      }
      break;
    }
    case kLine: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.line_;
      }
      break;
    }
    case kLines: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.lines_;
      }
      break;
    }
    case kPolygon: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.polygon_;
      }
      break;
    }
    case kPolygons: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.polygons_;
      }
      break;
    }
    case kPose: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.pose_;
      }
      break;
    }
    case kPoses: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.poses_;
      }
      break;
    }
    case kBoundingbox: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.boundingbox_;
      }
      break;
    }
    case kBoundingboxes: {
      if (GetArenaNoVirtual() == NULL) {
        delete msg_.boundingboxes_;
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void MessageGeometry::Clear() {
// @@protoc_insertion_point(message_clear_start:itd.communication.protobuf.MessageGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  clear_msg();
  _internal_metadata_.Clear();
}

bool MessageGeometry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:itd.communication.protobuf.MessageGeometry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .itd.communication.protobuf.MessageGeometry.MessageType type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::itd::communication::protobuf::MessageGeometry_MessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .itd.communication.protobuf.Point point = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .itd.communication.protobuf.Points points = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .itd.communication.protobuf.Line line = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .itd.communication.protobuf.Lines lines = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lines()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .itd.communication.protobuf.Polygon polygon = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_polygon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .itd.communication.protobuf.Polygons polygons = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_polygons()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .itd.communication.protobuf.Pose pose = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .itd.communication.protobuf.Poses poses = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_poses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .itd.communication.protobuf.BoundingBox boundingbox = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_boundingbox()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .itd.communication.protobuf.BoundingBoxes boundingboxes = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_boundingboxes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:itd.communication.protobuf.MessageGeometry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:itd.communication.protobuf.MessageGeometry)
  return false;
#undef DO_
}

void MessageGeometry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:itd.communication.protobuf.MessageGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.MessageGeometry.MessageType type = 10;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->type(), output);
  }

  // .itd.communication.protobuf.Point point = 11;
  if (has_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *msg_.point_, output);
  }

  // .itd.communication.protobuf.Points points = 12;
  if (has_points()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *msg_.points_, output);
  }

  // .itd.communication.protobuf.Line line = 13;
  if (has_line()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *msg_.line_, output);
  }

  // .itd.communication.protobuf.Lines lines = 14;
  if (has_lines()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *msg_.lines_, output);
  }

  // .itd.communication.protobuf.Polygon polygon = 15;
  if (has_polygon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *msg_.polygon_, output);
  }

  // .itd.communication.protobuf.Polygons polygons = 16;
  if (has_polygons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *msg_.polygons_, output);
  }

  // .itd.communication.protobuf.Pose pose = 17;
  if (has_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *msg_.pose_, output);
  }

  // .itd.communication.protobuf.Poses poses = 18;
  if (has_poses()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *msg_.poses_, output);
  }

  // .itd.communication.protobuf.BoundingBox boundingbox = 19;
  if (has_boundingbox()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *msg_.boundingbox_, output);
  }

  // .itd.communication.protobuf.BoundingBoxes boundingboxes = 20;
  if (has_boundingboxes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *msg_.boundingboxes_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:itd.communication.protobuf.MessageGeometry)
}

::google::protobuf::uint8* MessageGeometry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:itd.communication.protobuf.MessageGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .itd.communication.protobuf.MessageGeometry.MessageType type = 10;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->type(), target);
  }

  // .itd.communication.protobuf.Point point = 11;
  if (has_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *msg_.point_, deterministic, target);
  }

  // .itd.communication.protobuf.Points points = 12;
  if (has_points()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *msg_.points_, deterministic, target);
  }

  // .itd.communication.protobuf.Line line = 13;
  if (has_line()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, *msg_.line_, deterministic, target);
  }

  // .itd.communication.protobuf.Lines lines = 14;
  if (has_lines()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, *msg_.lines_, deterministic, target);
  }

  // .itd.communication.protobuf.Polygon polygon = 15;
  if (has_polygon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, *msg_.polygon_, deterministic, target);
  }

  // .itd.communication.protobuf.Polygons polygons = 16;
  if (has_polygons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, *msg_.polygons_, deterministic, target);
  }

  // .itd.communication.protobuf.Pose pose = 17;
  if (has_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, *msg_.pose_, deterministic, target);
  }

  // .itd.communication.protobuf.Poses poses = 18;
  if (has_poses()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, *msg_.poses_, deterministic, target);
  }

  // .itd.communication.protobuf.BoundingBox boundingbox = 19;
  if (has_boundingbox()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, *msg_.boundingbox_, deterministic, target);
  }

  // .itd.communication.protobuf.BoundingBoxes boundingboxes = 20;
  if (has_boundingboxes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, *msg_.boundingboxes_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:itd.communication.protobuf.MessageGeometry)
  return target;
}

size_t MessageGeometry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:itd.communication.protobuf.MessageGeometry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .itd.communication.protobuf.MessageGeometry.MessageType type = 10;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  switch (msg_case()) {
    // .itd.communication.protobuf.Point point = 11;
    case kPoint: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.point_);
      break;
    }
    // .itd.communication.protobuf.Points points = 12;
    case kPoints: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.points_);
      break;
    }
    // .itd.communication.protobuf.Line line = 13;
    case kLine: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.line_);
      break;
    }
    // .itd.communication.protobuf.Lines lines = 14;
    case kLines: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.lines_);
      break;
    }
    // .itd.communication.protobuf.Polygon polygon = 15;
    case kPolygon: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.polygon_);
      break;
    }
    // .itd.communication.protobuf.Polygons polygons = 16;
    case kPolygons: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.polygons_);
      break;
    }
    // .itd.communication.protobuf.Pose pose = 17;
    case kPose: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.pose_);
      break;
    }
    // .itd.communication.protobuf.Poses poses = 18;
    case kPoses: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.poses_);
      break;
    }
    // .itd.communication.protobuf.BoundingBox boundingbox = 19;
    case kBoundingbox: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.boundingbox_);
      break;
    }
    // .itd.communication.protobuf.BoundingBoxes boundingboxes = 20;
    case kBoundingboxes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.boundingboxes_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageGeometry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:itd.communication.protobuf.MessageGeometry)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageGeometry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageGeometry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:itd.communication.protobuf.MessageGeometry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:itd.communication.protobuf.MessageGeometry)
    MergeFrom(*source);
  }
}

void MessageGeometry::MergeFrom(const MessageGeometry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:itd.communication.protobuf.MessageGeometry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  switch (from.msg_case()) {
    case kPoint: {
      mutable_point()->::itd::communication::protobuf::Point::MergeFrom(from.point());
      break;
    }
    case kPoints: {
      mutable_points()->::itd::communication::protobuf::Points::MergeFrom(from.points());
      break;
    }
    case kLine: {
      mutable_line()->::itd::communication::protobuf::Line::MergeFrom(from.line());
      break;
    }
    case kLines: {
      mutable_lines()->::itd::communication::protobuf::Lines::MergeFrom(from.lines());
      break;
    }
    case kPolygon: {
      mutable_polygon()->::itd::communication::protobuf::Polygon::MergeFrom(from.polygon());
      break;
    }
    case kPolygons: {
      mutable_polygons()->::itd::communication::protobuf::Polygons::MergeFrom(from.polygons());
      break;
    }
    case kPose: {
      mutable_pose()->::itd::communication::protobuf::Pose::MergeFrom(from.pose());
      break;
    }
    case kPoses: {
      mutable_poses()->::itd::communication::protobuf::Poses::MergeFrom(from.poses());
      break;
    }
    case kBoundingbox: {
      mutable_boundingbox()->::itd::communication::protobuf::BoundingBox::MergeFrom(from.boundingbox());
      break;
    }
    case kBoundingboxes: {
      mutable_boundingboxes()->::itd::communication::protobuf::BoundingBoxes::MergeFrom(from.boundingboxes());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void MessageGeometry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:itd.communication.protobuf.MessageGeometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageGeometry::CopyFrom(const MessageGeometry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:itd.communication.protobuf.MessageGeometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageGeometry::IsInitialized() const {
  return true;
}

void MessageGeometry::Swap(MessageGeometry* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MessageGeometry* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MessageGeometry::UnsafeArenaSwap(MessageGeometry* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MessageGeometry::InternalSwap(MessageGeometry* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageGeometry::GetMetadata() const {
  protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_itd_5fipd_5fgeometry_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace communication
}  // namespace itd

// @@protoc_insertion_point(global_scope)
