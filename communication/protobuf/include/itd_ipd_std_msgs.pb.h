// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: itd_ipd_std_msgs.proto

#ifndef PROTOBUF_itd_5fipd_5fstd_5fmsgs_2eproto__INCLUDED
#define PROTOBUF_itd_5fipd_5fstd_5fmsgs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_itd_5fipd_5fstd_5fmsgs_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[17];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsHeaderImpl();
void InitDefaultsHeader();
void InitDefaultsBoolImpl();
void InitDefaultsBool();
void InitDefaultsBytesImpl();
void InitDefaultsBytes();
void InitDefaultsStringImpl();
void InitDefaultsString();
void InitDefaultsInt32Impl();
void InitDefaultsInt32();
void InitDefaultsInt32ArrayImpl();
void InitDefaultsInt32Array();
void InitDefaultsUint32Impl();
void InitDefaultsUint32();
void InitDefaultsUint32ArrayImpl();
void InitDefaultsUint32Array();
void InitDefaultsInt64Impl();
void InitDefaultsInt64();
void InitDefaultsInt64ArrayImpl();
void InitDefaultsInt64Array();
void InitDefaultsUint64Impl();
void InitDefaultsUint64();
void InitDefaultsUint64ArrayImpl();
void InitDefaultsUint64Array();
void InitDefaultsFloat32Impl();
void InitDefaultsFloat32();
void InitDefaultsFloat32ArrayImpl();
void InitDefaultsFloat32Array();
void InitDefaultsFloat64Impl();
void InitDefaultsFloat64();
void InitDefaultsFloat64ArrayImpl();
void InitDefaultsFloat64Array();
void InitDefaultsGeneralFreeImpl();
void InitDefaultsGeneralFree();
inline void InitDefaults() {
  InitDefaultsHeader();
  InitDefaultsBool();
  InitDefaultsBytes();
  InitDefaultsString();
  InitDefaultsInt32();
  InitDefaultsInt32Array();
  InitDefaultsUint32();
  InitDefaultsUint32Array();
  InitDefaultsInt64();
  InitDefaultsInt64Array();
  InitDefaultsUint64();
  InitDefaultsUint64Array();
  InitDefaultsFloat32();
  InitDefaultsFloat32Array();
  InitDefaultsFloat64();
  InitDefaultsFloat64Array();
  InitDefaultsGeneralFree();
}
}  // namespace protobuf_itd_5fipd_5fstd_5fmsgs_2eproto
namespace itd {
namespace communication {
namespace protobuf {
class Bool;
class BoolDefaultTypeInternal;
extern BoolDefaultTypeInternal _Bool_default_instance_;
class Bytes;
class BytesDefaultTypeInternal;
extern BytesDefaultTypeInternal _Bytes_default_instance_;
class Float32;
class Float32DefaultTypeInternal;
extern Float32DefaultTypeInternal _Float32_default_instance_;
class Float32Array;
class Float32ArrayDefaultTypeInternal;
extern Float32ArrayDefaultTypeInternal _Float32Array_default_instance_;
class Float64;
class Float64DefaultTypeInternal;
extern Float64DefaultTypeInternal _Float64_default_instance_;
class Float64Array;
class Float64ArrayDefaultTypeInternal;
extern Float64ArrayDefaultTypeInternal _Float64Array_default_instance_;
class GeneralFree;
class GeneralFreeDefaultTypeInternal;
extern GeneralFreeDefaultTypeInternal _GeneralFree_default_instance_;
class Header;
class HeaderDefaultTypeInternal;
extern HeaderDefaultTypeInternal _Header_default_instance_;
class Int32;
class Int32DefaultTypeInternal;
extern Int32DefaultTypeInternal _Int32_default_instance_;
class Int32Array;
class Int32ArrayDefaultTypeInternal;
extern Int32ArrayDefaultTypeInternal _Int32Array_default_instance_;
class Int64;
class Int64DefaultTypeInternal;
extern Int64DefaultTypeInternal _Int64_default_instance_;
class Int64Array;
class Int64ArrayDefaultTypeInternal;
extern Int64ArrayDefaultTypeInternal _Int64Array_default_instance_;
class String;
class StringDefaultTypeInternal;
extern StringDefaultTypeInternal _String_default_instance_;
class Uint32;
class Uint32DefaultTypeInternal;
extern Uint32DefaultTypeInternal _Uint32_default_instance_;
class Uint32Array;
class Uint32ArrayDefaultTypeInternal;
extern Uint32ArrayDefaultTypeInternal _Uint32Array_default_instance_;
class Uint64;
class Uint64DefaultTypeInternal;
extern Uint64DefaultTypeInternal _Uint64_default_instance_;
class Uint64Array;
class Uint64ArrayDefaultTypeInternal;
extern Uint64ArrayDefaultTypeInternal _Uint64Array_default_instance_;
}  // namespace protobuf
}  // namespace communication
}  // namespace itd
namespace itd {
namespace communication {
namespace protobuf {

// ===================================================================

class Header : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:itd.communication.protobuf.Header) */ {
 public:
  Header();
  virtual ~Header();

  Header(const Header& from);

  inline Header& operator=(const Header& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Header(Header&& from) noexcept
    : Header() {
    *this = ::std::move(from);
  }

  inline Header& operator=(Header&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Header& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Header* internal_default_instance() {
    return reinterpret_cast<const Header*>(
               &_Header_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(Header* other);
  void Swap(Header* other);
  friend void swap(Header& a, Header& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Header* New() const PROTOBUF_FINAL { return New(NULL); }

  Header* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Header& from);
  void MergeFrom(const Header& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Header* other);
  protected:
  explicit Header(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string frame_id = 3;
  void clear_frame_id();
  static const int kFrameIdFieldNumber = 3;
  const ::std::string& frame_id() const;
  void set_frame_id(const ::std::string& value);
  #if LANG_CXX11
  void set_frame_id(::std::string&& value);
  #endif
  void set_frame_id(const char* value);
  void set_frame_id(const char* value, size_t size);
  ::std::string* mutable_frame_id();
  ::std::string* release_frame_id();
  void set_allocated_frame_id(::std::string* frame_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_frame_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_frame_id(
      ::std::string* frame_id);

  // uint64 stamp = 2;
  void clear_stamp();
  static const int kStampFieldNumber = 2;
  ::google::protobuf::uint64 stamp() const;
  void set_stamp(::google::protobuf::uint64 value);

  // uint32 seq = 1;
  void clear_seq();
  static const int kSeqFieldNumber = 1;
  ::google::protobuf::uint32 seq() const;
  void set_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:itd.communication.protobuf.Header)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr frame_id_;
  ::google::protobuf::uint64 stamp_;
  ::google::protobuf::uint32 seq_;
  mutable int _cached_size_;
  friend struct ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsHeaderImpl();
};
// -------------------------------------------------------------------

class Bool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:itd.communication.protobuf.Bool) */ {
 public:
  Bool();
  virtual ~Bool();

  Bool(const Bool& from);

  inline Bool& operator=(const Bool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bool(Bool&& from) noexcept
    : Bool() {
    *this = ::std::move(from);
  }

  inline Bool& operator=(Bool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Bool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bool* internal_default_instance() {
    return reinterpret_cast<const Bool*>(
               &_Bool_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(Bool* other);
  void Swap(Bool* other);
  friend void swap(Bool& a, Bool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bool* New() const PROTOBUF_FINAL { return New(NULL); }

  Bool* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Bool& from);
  void MergeFrom(const Bool& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Bool* other);
  protected:
  explicit Bool(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  bool data() const;
  void set_data(bool value);

  // @@protoc_insertion_point(class_scope:itd.communication.protobuf.Bool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool data_;
  mutable int _cached_size_;
  friend struct ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsBoolImpl();
};
// -------------------------------------------------------------------

class Bytes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:itd.communication.protobuf.Bytes) */ {
 public:
  Bytes();
  virtual ~Bytes();

  Bytes(const Bytes& from);

  inline Bytes& operator=(const Bytes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bytes(Bytes&& from) noexcept
    : Bytes() {
    *this = ::std::move(from);
  }

  inline Bytes& operator=(Bytes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Bytes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bytes* internal_default_instance() {
    return reinterpret_cast<const Bytes*>(
               &_Bytes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(Bytes* other);
  void Swap(Bytes* other);
  friend void swap(Bytes& a, Bytes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bytes* New() const PROTOBUF_FINAL { return New(NULL); }

  Bytes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Bytes& from);
  void MergeFrom(const Bytes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Bytes* other);
  protected:
  explicit Bytes(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_data();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_data(
      ::std::string* data);

  // @@protoc_insertion_point(class_scope:itd.communication.protobuf.Bytes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend struct ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsBytesImpl();
};
// -------------------------------------------------------------------

class String : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:itd.communication.protobuf.String) */ {
 public:
  String();
  virtual ~String();

  String(const String& from);

  inline String& operator=(const String& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  String(String&& from) noexcept
    : String() {
    *this = ::std::move(from);
  }

  inline String& operator=(String&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const String& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const String* internal_default_instance() {
    return reinterpret_cast<const String*>(
               &_String_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(String* other);
  void Swap(String* other);
  friend void swap(String& a, String& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline String* New() const PROTOBUF_FINAL { return New(NULL); }

  String* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const String& from);
  void MergeFrom(const String& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(String* other);
  protected:
  explicit String(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_data();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_data(
      ::std::string* data);

  // @@protoc_insertion_point(class_scope:itd.communication.protobuf.String)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend struct ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsStringImpl();
};
// -------------------------------------------------------------------

class Int32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:itd.communication.protobuf.Int32) */ {
 public:
  Int32();
  virtual ~Int32();

  Int32(const Int32& from);

  inline Int32& operator=(const Int32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int32(Int32&& from) noexcept
    : Int32() {
    *this = ::std::move(from);
  }

  inline Int32& operator=(Int32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Int32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int32* internal_default_instance() {
    return reinterpret_cast<const Int32*>(
               &_Int32_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(Int32* other);
  void Swap(Int32* other);
  friend void swap(Int32& a, Int32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int32* New() const PROTOBUF_FINAL { return New(NULL); }

  Int32* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Int32& from);
  void MergeFrom(const Int32& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Int32* other);
  protected:
  explicit Int32(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint32 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::int32 data() const;
  void set_data(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:itd.communication.protobuf.Int32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::int32 data_;
  mutable int _cached_size_;
  friend struct ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsInt32Impl();
};
// -------------------------------------------------------------------

class Int32Array : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:itd.communication.protobuf.Int32Array) */ {
 public:
  Int32Array();
  virtual ~Int32Array();

  Int32Array(const Int32Array& from);

  inline Int32Array& operator=(const Int32Array& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int32Array(Int32Array&& from) noexcept
    : Int32Array() {
    *this = ::std::move(from);
  }

  inline Int32Array& operator=(Int32Array&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Int32Array& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int32Array* internal_default_instance() {
    return reinterpret_cast<const Int32Array*>(
               &_Int32Array_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(Int32Array* other);
  void Swap(Int32Array* other);
  friend void swap(Int32Array& a, Int32Array& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int32Array* New() const PROTOBUF_FINAL { return New(NULL); }

  Int32Array* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Int32Array& from);
  void MergeFrom(const Int32Array& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Int32Array* other);
  protected:
  explicit Int32Array(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::int32 data(int index) const;
  void set_data(int index, ::google::protobuf::int32 value);
  void add_data(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      data() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:itd.communication.protobuf.Int32Array)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > data_;
  mutable int _data_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsInt32ArrayImpl();
};
// -------------------------------------------------------------------

class Uint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:itd.communication.protobuf.Uint32) */ {
 public:
  Uint32();
  virtual ~Uint32();

  Uint32(const Uint32& from);

  inline Uint32& operator=(const Uint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Uint32(Uint32&& from) noexcept
    : Uint32() {
    *this = ::std::move(from);
  }

  inline Uint32& operator=(Uint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Uint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Uint32* internal_default_instance() {
    return reinterpret_cast<const Uint32*>(
               &_Uint32_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(Uint32* other);
  void Swap(Uint32* other);
  friend void swap(Uint32& a, Uint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Uint32* New() const PROTOBUF_FINAL { return New(NULL); }

  Uint32* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Uint32& from);
  void MergeFrom(const Uint32& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Uint32* other);
  protected:
  explicit Uint32(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::uint32 data() const;
  void set_data(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:itd.communication.protobuf.Uint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::uint32 data_;
  mutable int _cached_size_;
  friend struct ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsUint32Impl();
};
// -------------------------------------------------------------------

class Uint32Array : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:itd.communication.protobuf.Uint32Array) */ {
 public:
  Uint32Array();
  virtual ~Uint32Array();

  Uint32Array(const Uint32Array& from);

  inline Uint32Array& operator=(const Uint32Array& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Uint32Array(Uint32Array&& from) noexcept
    : Uint32Array() {
    *this = ::std::move(from);
  }

  inline Uint32Array& operator=(Uint32Array&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Uint32Array& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Uint32Array* internal_default_instance() {
    return reinterpret_cast<const Uint32Array*>(
               &_Uint32Array_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(Uint32Array* other);
  void Swap(Uint32Array* other);
  friend void swap(Uint32Array& a, Uint32Array& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Uint32Array* New() const PROTOBUF_FINAL { return New(NULL); }

  Uint32Array* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Uint32Array& from);
  void MergeFrom(const Uint32Array& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Uint32Array* other);
  protected:
  explicit Uint32Array(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::uint32 data(int index) const;
  void set_data(int index, ::google::protobuf::uint32 value);
  void add_data(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      data() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:itd.communication.protobuf.Uint32Array)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > data_;
  mutable int _data_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsUint32ArrayImpl();
};
// -------------------------------------------------------------------

class Int64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:itd.communication.protobuf.Int64) */ {
 public:
  Int64();
  virtual ~Int64();

  Int64(const Int64& from);

  inline Int64& operator=(const Int64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int64(Int64&& from) noexcept
    : Int64() {
    *this = ::std::move(from);
  }

  inline Int64& operator=(Int64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int64* internal_default_instance() {
    return reinterpret_cast<const Int64*>(
               &_Int64_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(Int64* other);
  void Swap(Int64* other);
  friend void swap(Int64& a, Int64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int64* New() const PROTOBUF_FINAL { return New(NULL); }

  Int64* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Int64& from);
  void MergeFrom(const Int64& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Int64* other);
  protected:
  explicit Int64(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint64 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::int64 data() const;
  void set_data(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:itd.communication.protobuf.Int64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::int64 data_;
  mutable int _cached_size_;
  friend struct ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsInt64Impl();
};
// -------------------------------------------------------------------

class Int64Array : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:itd.communication.protobuf.Int64Array) */ {
 public:
  Int64Array();
  virtual ~Int64Array();

  Int64Array(const Int64Array& from);

  inline Int64Array& operator=(const Int64Array& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int64Array(Int64Array&& from) noexcept
    : Int64Array() {
    *this = ::std::move(from);
  }

  inline Int64Array& operator=(Int64Array&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64Array& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Int64Array* internal_default_instance() {
    return reinterpret_cast<const Int64Array*>(
               &_Int64Array_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(Int64Array* other);
  void Swap(Int64Array* other);
  friend void swap(Int64Array& a, Int64Array& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int64Array* New() const PROTOBUF_FINAL { return New(NULL); }

  Int64Array* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Int64Array& from);
  void MergeFrom(const Int64Array& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Int64Array* other);
  protected:
  explicit Int64Array(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::int64 data(int index) const;
  void set_data(int index, ::google::protobuf::int64 value);
  void add_data(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      data() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:itd.communication.protobuf.Int64Array)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > data_;
  mutable int _data_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsInt64ArrayImpl();
};
// -------------------------------------------------------------------

class Uint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:itd.communication.protobuf.Uint64) */ {
 public:
  Uint64();
  virtual ~Uint64();

  Uint64(const Uint64& from);

  inline Uint64& operator=(const Uint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Uint64(Uint64&& from) noexcept
    : Uint64() {
    *this = ::std::move(from);
  }

  inline Uint64& operator=(Uint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Uint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Uint64* internal_default_instance() {
    return reinterpret_cast<const Uint64*>(
               &_Uint64_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(Uint64* other);
  void Swap(Uint64* other);
  friend void swap(Uint64& a, Uint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Uint64* New() const PROTOBUF_FINAL { return New(NULL); }

  Uint64* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Uint64& from);
  void MergeFrom(const Uint64& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Uint64* other);
  protected:
  explicit Uint64(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::uint64 data() const;
  void set_data(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:itd.communication.protobuf.Uint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::uint64 data_;
  mutable int _cached_size_;
  friend struct ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsUint64Impl();
};
// -------------------------------------------------------------------

class Uint64Array : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:itd.communication.protobuf.Uint64Array) */ {
 public:
  Uint64Array();
  virtual ~Uint64Array();

  Uint64Array(const Uint64Array& from);

  inline Uint64Array& operator=(const Uint64Array& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Uint64Array(Uint64Array&& from) noexcept
    : Uint64Array() {
    *this = ::std::move(from);
  }

  inline Uint64Array& operator=(Uint64Array&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Uint64Array& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Uint64Array* internal_default_instance() {
    return reinterpret_cast<const Uint64Array*>(
               &_Uint64Array_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(Uint64Array* other);
  void Swap(Uint64Array* other);
  friend void swap(Uint64Array& a, Uint64Array& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Uint64Array* New() const PROTOBUF_FINAL { return New(NULL); }

  Uint64Array* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Uint64Array& from);
  void MergeFrom(const Uint64Array& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Uint64Array* other);
  protected:
  explicit Uint64Array(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::uint64 data(int index) const;
  void set_data(int index, ::google::protobuf::uint64 value);
  void add_data(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      data() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:itd.communication.protobuf.Uint64Array)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > data_;
  mutable int _data_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsUint64ArrayImpl();
};
// -------------------------------------------------------------------

class Float32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:itd.communication.protobuf.Float32) */ {
 public:
  Float32();
  virtual ~Float32();

  Float32(const Float32& from);

  inline Float32& operator=(const Float32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Float32(Float32&& from) noexcept
    : Float32() {
    *this = ::std::move(from);
  }

  inline Float32& operator=(Float32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Float32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Float32* internal_default_instance() {
    return reinterpret_cast<const Float32*>(
               &_Float32_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void UnsafeArenaSwap(Float32* other);
  void Swap(Float32* other);
  friend void swap(Float32& a, Float32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Float32* New() const PROTOBUF_FINAL { return New(NULL); }

  Float32* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Float32& from);
  void MergeFrom(const Float32& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Float32* other);
  protected:
  explicit Float32(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  float data() const;
  void set_data(float value);

  // @@protoc_insertion_point(class_scope:itd.communication.protobuf.Float32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float data_;
  mutable int _cached_size_;
  friend struct ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsFloat32Impl();
};
// -------------------------------------------------------------------

class Float32Array : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:itd.communication.protobuf.Float32Array) */ {
 public:
  Float32Array();
  virtual ~Float32Array();

  Float32Array(const Float32Array& from);

  inline Float32Array& operator=(const Float32Array& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Float32Array(Float32Array&& from) noexcept
    : Float32Array() {
    *this = ::std::move(from);
  }

  inline Float32Array& operator=(Float32Array&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Float32Array& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Float32Array* internal_default_instance() {
    return reinterpret_cast<const Float32Array*>(
               &_Float32Array_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void UnsafeArenaSwap(Float32Array* other);
  void Swap(Float32Array* other);
  friend void swap(Float32Array& a, Float32Array& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Float32Array* New() const PROTOBUF_FINAL { return New(NULL); }

  Float32Array* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Float32Array& from);
  void MergeFrom(const Float32Array& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Float32Array* other);
  protected:
  explicit Float32Array(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  float data(int index) const;
  void set_data(int index, float value);
  void add_data(float value);
  const ::google::protobuf::RepeatedField< float >&
      data() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:itd.communication.protobuf.Float32Array)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< float > data_;
  mutable int _data_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsFloat32ArrayImpl();
};
// -------------------------------------------------------------------

class Float64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:itd.communication.protobuf.Float64) */ {
 public:
  Float64();
  virtual ~Float64();

  Float64(const Float64& from);

  inline Float64& operator=(const Float64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Float64(Float64&& from) noexcept
    : Float64() {
    *this = ::std::move(from);
  }

  inline Float64& operator=(Float64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Float64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Float64* internal_default_instance() {
    return reinterpret_cast<const Float64*>(
               &_Float64_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void UnsafeArenaSwap(Float64* other);
  void Swap(Float64* other);
  friend void swap(Float64& a, Float64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Float64* New() const PROTOBUF_FINAL { return New(NULL); }

  Float64* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Float64& from);
  void MergeFrom(const Float64& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Float64* other);
  protected:
  explicit Float64(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  double data() const;
  void set_data(double value);

  // @@protoc_insertion_point(class_scope:itd.communication.protobuf.Float64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double data_;
  mutable int _cached_size_;
  friend struct ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsFloat64Impl();
};
// -------------------------------------------------------------------

class Float64Array : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:itd.communication.protobuf.Float64Array) */ {
 public:
  Float64Array();
  virtual ~Float64Array();

  Float64Array(const Float64Array& from);

  inline Float64Array& operator=(const Float64Array& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Float64Array(Float64Array&& from) noexcept
    : Float64Array() {
    *this = ::std::move(from);
  }

  inline Float64Array& operator=(Float64Array&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Float64Array& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Float64Array* internal_default_instance() {
    return reinterpret_cast<const Float64Array*>(
               &_Float64Array_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void UnsafeArenaSwap(Float64Array* other);
  void Swap(Float64Array* other);
  friend void swap(Float64Array& a, Float64Array& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Float64Array* New() const PROTOBUF_FINAL { return New(NULL); }

  Float64Array* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Float64Array& from);
  void MergeFrom(const Float64Array& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Float64Array* other);
  protected:
  explicit Float64Array(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  double data(int index) const;
  void set_data(int index, double value);
  void add_data(double value);
  const ::google::protobuf::RepeatedField< double >&
      data() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:itd.communication.protobuf.Float64Array)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< double > data_;
  mutable int _data_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsFloat64ArrayImpl();
};
// -------------------------------------------------------------------

class GeneralFree : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:itd.communication.protobuf.GeneralFree) */ {
 public:
  GeneralFree();
  virtual ~GeneralFree();

  GeneralFree(const GeneralFree& from);

  inline GeneralFree& operator=(const GeneralFree& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GeneralFree(GeneralFree&& from) noexcept
    : GeneralFree() {
    *this = ::std::move(from);
  }

  inline GeneralFree& operator=(GeneralFree&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GeneralFree& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GeneralFree* internal_default_instance() {
    return reinterpret_cast<const GeneralFree*>(
               &_GeneralFree_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void UnsafeArenaSwap(GeneralFree* other);
  void Swap(GeneralFree* other);
  friend void swap(GeneralFree& a, GeneralFree& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GeneralFree* New() const PROTOBUF_FINAL { return New(NULL); }

  GeneralFree* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GeneralFree& from);
  void MergeFrom(const GeneralFree& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GeneralFree* other);
  protected:
  explicit GeneralFree(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .itd.communication.protobuf.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  void _slow_mutable_header();
  public:
  const ::itd::communication::protobuf::Header& header() const;
  ::itd::communication::protobuf::Header* release_header();
  ::itd::communication::protobuf::Header* mutable_header();
  void set_allocated_header(::itd::communication::protobuf::Header* header);
  void unsafe_arena_set_allocated_header(
      ::itd::communication::protobuf::Header* header);
  ::itd::communication::protobuf::Header* unsafe_arena_release_header();

  // .itd.communication.protobuf.Int32Array data_i32 = 2;
  bool has_data_i32() const;
  void clear_data_i32();
  static const int kDataI32FieldNumber = 2;
  private:
  void _slow_mutable_data_i32();
  public:
  const ::itd::communication::protobuf::Int32Array& data_i32() const;
  ::itd::communication::protobuf::Int32Array* release_data_i32();
  ::itd::communication::protobuf::Int32Array* mutable_data_i32();
  void set_allocated_data_i32(::itd::communication::protobuf::Int32Array* data_i32);
  void unsafe_arena_set_allocated_data_i32(
      ::itd::communication::protobuf::Int32Array* data_i32);
  ::itd::communication::protobuf::Int32Array* unsafe_arena_release_data_i32();

  // .itd.communication.protobuf.Int64Array data_i64 = 3;
  bool has_data_i64() const;
  void clear_data_i64();
  static const int kDataI64FieldNumber = 3;
  private:
  void _slow_mutable_data_i64();
  public:
  const ::itd::communication::protobuf::Int64Array& data_i64() const;
  ::itd::communication::protobuf::Int64Array* release_data_i64();
  ::itd::communication::protobuf::Int64Array* mutable_data_i64();
  void set_allocated_data_i64(::itd::communication::protobuf::Int64Array* data_i64);
  void unsafe_arena_set_allocated_data_i64(
      ::itd::communication::protobuf::Int64Array* data_i64);
  ::itd::communication::protobuf::Int64Array* unsafe_arena_release_data_i64();

  // .itd.communication.protobuf.Float32Array data_float32 = 4;
  bool has_data_float32() const;
  void clear_data_float32();
  static const int kDataFloat32FieldNumber = 4;
  private:
  void _slow_mutable_data_float32();
  public:
  const ::itd::communication::protobuf::Float32Array& data_float32() const;
  ::itd::communication::protobuf::Float32Array* release_data_float32();
  ::itd::communication::protobuf::Float32Array* mutable_data_float32();
  void set_allocated_data_float32(::itd::communication::protobuf::Float32Array* data_float32);
  void unsafe_arena_set_allocated_data_float32(
      ::itd::communication::protobuf::Float32Array* data_float32);
  ::itd::communication::protobuf::Float32Array* unsafe_arena_release_data_float32();

  // .itd.communication.protobuf.Float64Array data_float64 = 5;
  bool has_data_float64() const;
  void clear_data_float64();
  static const int kDataFloat64FieldNumber = 5;
  private:
  void _slow_mutable_data_float64();
  public:
  const ::itd::communication::protobuf::Float64Array& data_float64() const;
  ::itd::communication::protobuf::Float64Array* release_data_float64();
  ::itd::communication::protobuf::Float64Array* mutable_data_float64();
  void set_allocated_data_float64(::itd::communication::protobuf::Float64Array* data_float64);
  void unsafe_arena_set_allocated_data_float64(
      ::itd::communication::protobuf::Float64Array* data_float64);
  ::itd::communication::protobuf::Float64Array* unsafe_arena_release_data_float64();

  // @@protoc_insertion_point(class_scope:itd.communication.protobuf.GeneralFree)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::itd::communication::protobuf::Header* header_;
  ::itd::communication::protobuf::Int32Array* data_i32_;
  ::itd::communication::protobuf::Int64Array* data_i64_;
  ::itd::communication::protobuf::Float32Array* data_float32_;
  ::itd::communication::protobuf::Float64Array* data_float64_;
  mutable int _cached_size_;
  friend struct ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_itd_5fipd_5fstd_5fmsgs_2eproto::InitDefaultsGeneralFreeImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Header

// uint32 seq = 1;
inline void Header::clear_seq() {
  seq_ = 0u;
}
inline ::google::protobuf::uint32 Header::seq() const {
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.Header.seq)
  return seq_;
}
inline void Header::set_seq(::google::protobuf::uint32 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:itd.communication.protobuf.Header.seq)
}

// uint64 stamp = 2;
inline void Header::clear_stamp() {
  stamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Header::stamp() const {
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.Header.stamp)
  return stamp_;
}
inline void Header::set_stamp(::google::protobuf::uint64 value) {
  
  stamp_ = value;
  // @@protoc_insertion_point(field_set:itd.communication.protobuf.Header.stamp)
}

// string frame_id = 3;
inline void Header::clear_frame_id() {
  frame_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Header::frame_id() const {
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.Header.frame_id)
  return frame_id_.Get();
}
inline void Header::set_frame_id(const ::std::string& value) {
  
  frame_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:itd.communication.protobuf.Header.frame_id)
}
#if LANG_CXX11
inline void Header::set_frame_id(::std::string&& value) {
  
  frame_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:itd.communication.protobuf.Header.frame_id)
}
#endif
inline void Header::set_frame_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  frame_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:itd.communication.protobuf.Header.frame_id)
}
inline void Header::set_frame_id(const char* value,
    size_t size) {
  
  frame_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:itd.communication.protobuf.Header.frame_id)
}
inline ::std::string* Header::mutable_frame_id() {
  
  // @@protoc_insertion_point(field_mutable:itd.communication.protobuf.Header.frame_id)
  return frame_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Header::release_frame_id() {
  // @@protoc_insertion_point(field_release:itd.communication.protobuf.Header.frame_id)
  
  return frame_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Header::set_allocated_frame_id(::std::string* frame_id) {
  if (frame_id != NULL) {
    
  } else {
    
  }
  frame_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), frame_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:itd.communication.protobuf.Header.frame_id)
}
inline ::std::string* Header::unsafe_arena_release_frame_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:itd.communication.protobuf.Header.frame_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return frame_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Header::unsafe_arena_set_allocated_frame_id(
    ::std::string* frame_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (frame_id != NULL) {
    
  } else {
    
  }
  frame_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      frame_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:itd.communication.protobuf.Header.frame_id)
}

// -------------------------------------------------------------------

// Bool

// bool data = 1;
inline void Bool::clear_data() {
  data_ = false;
}
inline bool Bool::data() const {
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.Bool.data)
  return data_;
}
inline void Bool::set_data(bool value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:itd.communication.protobuf.Bool.data)
}

// -------------------------------------------------------------------

// Bytes

// bytes data = 1;
inline void Bytes::clear_data() {
  data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Bytes::data() const {
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.Bytes.data)
  return data_.Get();
}
inline void Bytes::set_data(const ::std::string& value) {
  
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:itd.communication.protobuf.Bytes.data)
}
#if LANG_CXX11
inline void Bytes::set_data(::std::string&& value) {
  
  data_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:itd.communication.protobuf.Bytes.data)
}
#endif
inline void Bytes::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:itd.communication.protobuf.Bytes.data)
}
inline void Bytes::set_data(const void* value,
    size_t size) {
  
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:itd.communication.protobuf.Bytes.data)
}
inline ::std::string* Bytes::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:itd.communication.protobuf.Bytes.data)
  return data_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Bytes::release_data() {
  // @@protoc_insertion_point(field_release:itd.communication.protobuf.Bytes.data)
  
  return data_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Bytes::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:itd.communication.protobuf.Bytes.data)
}
inline ::std::string* Bytes::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:itd.communication.protobuf.Bytes.data)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return data_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Bytes::unsafe_arena_set_allocated_data(
    ::std::string* data) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (data != NULL) {
    
  } else {
    
  }
  data_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      data, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:itd.communication.protobuf.Bytes.data)
}

// -------------------------------------------------------------------

// String

// string data = 1;
inline void String::clear_data() {
  data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& String::data() const {
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.String.data)
  return data_.Get();
}
inline void String::set_data(const ::std::string& value) {
  
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:itd.communication.protobuf.String.data)
}
#if LANG_CXX11
inline void String::set_data(::std::string&& value) {
  
  data_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:itd.communication.protobuf.String.data)
}
#endif
inline void String::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:itd.communication.protobuf.String.data)
}
inline void String::set_data(const char* value,
    size_t size) {
  
  data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:itd.communication.protobuf.String.data)
}
inline ::std::string* String::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:itd.communication.protobuf.String.data)
  return data_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* String::release_data() {
  // @@protoc_insertion_point(field_release:itd.communication.protobuf.String.data)
  
  return data_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void String::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:itd.communication.protobuf.String.data)
}
inline ::std::string* String::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:itd.communication.protobuf.String.data)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return data_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void String::unsafe_arena_set_allocated_data(
    ::std::string* data) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (data != NULL) {
    
  } else {
    
  }
  data_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      data, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:itd.communication.protobuf.String.data)
}

// -------------------------------------------------------------------

// Int32

// sint32 data = 1;
inline void Int32::clear_data() {
  data_ = 0;
}
inline ::google::protobuf::int32 Int32::data() const {
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.Int32.data)
  return data_;
}
inline void Int32::set_data(::google::protobuf::int32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:itd.communication.protobuf.Int32.data)
}

// -------------------------------------------------------------------

// Int32Array

// repeated sint32 data = 1;
inline int Int32Array::data_size() const {
  return data_.size();
}
inline void Int32Array::clear_data() {
  data_.Clear();
}
inline ::google::protobuf::int32 Int32Array::data(int index) const {
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.Int32Array.data)
  return data_.Get(index);
}
inline void Int32Array::set_data(int index, ::google::protobuf::int32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:itd.communication.protobuf.Int32Array.data)
}
inline void Int32Array::add_data(::google::protobuf::int32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:itd.communication.protobuf.Int32Array.data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Int32Array::data() const {
  // @@protoc_insertion_point(field_list:itd.communication.protobuf.Int32Array.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Int32Array::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:itd.communication.protobuf.Int32Array.data)
  return &data_;
}

// -------------------------------------------------------------------

// Uint32

// uint32 data = 1;
inline void Uint32::clear_data() {
  data_ = 0u;
}
inline ::google::protobuf::uint32 Uint32::data() const {
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.Uint32.data)
  return data_;
}
inline void Uint32::set_data(::google::protobuf::uint32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:itd.communication.protobuf.Uint32.data)
}

// -------------------------------------------------------------------

// Uint32Array

// repeated uint32 data = 1;
inline int Uint32Array::data_size() const {
  return data_.size();
}
inline void Uint32Array::clear_data() {
  data_.Clear();
}
inline ::google::protobuf::uint32 Uint32Array::data(int index) const {
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.Uint32Array.data)
  return data_.Get(index);
}
inline void Uint32Array::set_data(int index, ::google::protobuf::uint32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:itd.communication.protobuf.Uint32Array.data)
}
inline void Uint32Array::add_data(::google::protobuf::uint32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:itd.communication.protobuf.Uint32Array.data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Uint32Array::data() const {
  // @@protoc_insertion_point(field_list:itd.communication.protobuf.Uint32Array.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Uint32Array::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:itd.communication.protobuf.Uint32Array.data)
  return &data_;
}

// -------------------------------------------------------------------

// Int64

// sint64 data = 1;
inline void Int64::clear_data() {
  data_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Int64::data() const {
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.Int64.data)
  return data_;
}
inline void Int64::set_data(::google::protobuf::int64 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:itd.communication.protobuf.Int64.data)
}

// -------------------------------------------------------------------

// Int64Array

// repeated sint64 data = 1;
inline int Int64Array::data_size() const {
  return data_.size();
}
inline void Int64Array::clear_data() {
  data_.Clear();
}
inline ::google::protobuf::int64 Int64Array::data(int index) const {
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.Int64Array.data)
  return data_.Get(index);
}
inline void Int64Array::set_data(int index, ::google::protobuf::int64 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:itd.communication.protobuf.Int64Array.data)
}
inline void Int64Array::add_data(::google::protobuf::int64 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:itd.communication.protobuf.Int64Array.data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Int64Array::data() const {
  // @@protoc_insertion_point(field_list:itd.communication.protobuf.Int64Array.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Int64Array::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:itd.communication.protobuf.Int64Array.data)
  return &data_;
}

// -------------------------------------------------------------------

// Uint64

// uint64 data = 1;
inline void Uint64::clear_data() {
  data_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Uint64::data() const {
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.Uint64.data)
  return data_;
}
inline void Uint64::set_data(::google::protobuf::uint64 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:itd.communication.protobuf.Uint64.data)
}

// -------------------------------------------------------------------

// Uint64Array

// repeated uint64 data = 1;
inline int Uint64Array::data_size() const {
  return data_.size();
}
inline void Uint64Array::clear_data() {
  data_.Clear();
}
inline ::google::protobuf::uint64 Uint64Array::data(int index) const {
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.Uint64Array.data)
  return data_.Get(index);
}
inline void Uint64Array::set_data(int index, ::google::protobuf::uint64 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:itd.communication.protobuf.Uint64Array.data)
}
inline void Uint64Array::add_data(::google::protobuf::uint64 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:itd.communication.protobuf.Uint64Array.data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Uint64Array::data() const {
  // @@protoc_insertion_point(field_list:itd.communication.protobuf.Uint64Array.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Uint64Array::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:itd.communication.protobuf.Uint64Array.data)
  return &data_;
}

// -------------------------------------------------------------------

// Float32

// float data = 1;
inline void Float32::clear_data() {
  data_ = 0;
}
inline float Float32::data() const {
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.Float32.data)
  return data_;
}
inline void Float32::set_data(float value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:itd.communication.protobuf.Float32.data)
}

// -------------------------------------------------------------------

// Float32Array

// repeated float data = 1;
inline int Float32Array::data_size() const {
  return data_.size();
}
inline void Float32Array::clear_data() {
  data_.Clear();
}
inline float Float32Array::data(int index) const {
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.Float32Array.data)
  return data_.Get(index);
}
inline void Float32Array::set_data(int index, float value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:itd.communication.protobuf.Float32Array.data)
}
inline void Float32Array::add_data(float value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:itd.communication.protobuf.Float32Array.data)
}
inline const ::google::protobuf::RepeatedField< float >&
Float32Array::data() const {
  // @@protoc_insertion_point(field_list:itd.communication.protobuf.Float32Array.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< float >*
Float32Array::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:itd.communication.protobuf.Float32Array.data)
  return &data_;
}

// -------------------------------------------------------------------

// Float64

// double data = 1;
inline void Float64::clear_data() {
  data_ = 0;
}
inline double Float64::data() const {
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.Float64.data)
  return data_;
}
inline void Float64::set_data(double value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:itd.communication.protobuf.Float64.data)
}

// -------------------------------------------------------------------

// Float64Array

// repeated double data = 1;
inline int Float64Array::data_size() const {
  return data_.size();
}
inline void Float64Array::clear_data() {
  data_.Clear();
}
inline double Float64Array::data(int index) const {
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.Float64Array.data)
  return data_.Get(index);
}
inline void Float64Array::set_data(int index, double value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:itd.communication.protobuf.Float64Array.data)
}
inline void Float64Array::add_data(double value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:itd.communication.protobuf.Float64Array.data)
}
inline const ::google::protobuf::RepeatedField< double >&
Float64Array::data() const {
  // @@protoc_insertion_point(field_list:itd.communication.protobuf.Float64Array.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< double >*
Float64Array::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:itd.communication.protobuf.Float64Array.data)
  return &data_;
}

// -------------------------------------------------------------------

// GeneralFree

// .itd.communication.protobuf.Header header = 1;
inline bool GeneralFree::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GeneralFree::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
inline const ::itd::communication::protobuf::Header& GeneralFree::header() const {
  const ::itd::communication::protobuf::Header* p = header_;
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.GeneralFree.header)
  return p != NULL ? *p : *reinterpret_cast<const ::itd::communication::protobuf::Header*>(
      &::itd::communication::protobuf::_Header_default_instance_);
}
inline ::itd::communication::protobuf::Header* GeneralFree::release_header() {
  // @@protoc_insertion_point(field_release:itd.communication.protobuf.GeneralFree.header)
  
  ::itd::communication::protobuf::Header* temp = header_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  header_ = NULL;
  return temp;
}
inline ::itd::communication::protobuf::Header* GeneralFree::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_unsafe_arena_release:itd.communication.protobuf.GeneralFree.header)
  
  ::itd::communication::protobuf::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::itd::communication::protobuf::Header* GeneralFree::mutable_header() {
  
  if (header_ == NULL) {
    _slow_mutable_header();
  }
  // @@protoc_insertion_point(field_mutable:itd.communication.protobuf.GeneralFree.header)
  return header_;
}
inline void GeneralFree::set_allocated_header(::itd::communication::protobuf::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete header_;
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(header);
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:itd.communication.protobuf.GeneralFree.header)
}

// .itd.communication.protobuf.Int32Array data_i32 = 2;
inline bool GeneralFree::has_data_i32() const {
  return this != internal_default_instance() && data_i32_ != NULL;
}
inline void GeneralFree::clear_data_i32() {
  if (GetArenaNoVirtual() == NULL && data_i32_ != NULL) {
    delete data_i32_;
  }
  data_i32_ = NULL;
}
inline const ::itd::communication::protobuf::Int32Array& GeneralFree::data_i32() const {
  const ::itd::communication::protobuf::Int32Array* p = data_i32_;
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.GeneralFree.data_i32)
  return p != NULL ? *p : *reinterpret_cast<const ::itd::communication::protobuf::Int32Array*>(
      &::itd::communication::protobuf::_Int32Array_default_instance_);
}
inline ::itd::communication::protobuf::Int32Array* GeneralFree::release_data_i32() {
  // @@protoc_insertion_point(field_release:itd.communication.protobuf.GeneralFree.data_i32)
  
  ::itd::communication::protobuf::Int32Array* temp = data_i32_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  data_i32_ = NULL;
  return temp;
}
inline ::itd::communication::protobuf::Int32Array* GeneralFree::unsafe_arena_release_data_i32() {
  // @@protoc_insertion_point(field_unsafe_arena_release:itd.communication.protobuf.GeneralFree.data_i32)
  
  ::itd::communication::protobuf::Int32Array* temp = data_i32_;
  data_i32_ = NULL;
  return temp;
}
inline ::itd::communication::protobuf::Int32Array* GeneralFree::mutable_data_i32() {
  
  if (data_i32_ == NULL) {
    _slow_mutable_data_i32();
  }
  // @@protoc_insertion_point(field_mutable:itd.communication.protobuf.GeneralFree.data_i32)
  return data_i32_;
}
inline void GeneralFree::set_allocated_data_i32(::itd::communication::protobuf::Int32Array* data_i32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete data_i32_;
  }
  if (data_i32) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(data_i32);
    if (message_arena != submessage_arena) {
      data_i32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data_i32, submessage_arena);
    }
    
  } else {
    
  }
  data_i32_ = data_i32;
  // @@protoc_insertion_point(field_set_allocated:itd.communication.protobuf.GeneralFree.data_i32)
}

// .itd.communication.protobuf.Int64Array data_i64 = 3;
inline bool GeneralFree::has_data_i64() const {
  return this != internal_default_instance() && data_i64_ != NULL;
}
inline void GeneralFree::clear_data_i64() {
  if (GetArenaNoVirtual() == NULL && data_i64_ != NULL) {
    delete data_i64_;
  }
  data_i64_ = NULL;
}
inline const ::itd::communication::protobuf::Int64Array& GeneralFree::data_i64() const {
  const ::itd::communication::protobuf::Int64Array* p = data_i64_;
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.GeneralFree.data_i64)
  return p != NULL ? *p : *reinterpret_cast<const ::itd::communication::protobuf::Int64Array*>(
      &::itd::communication::protobuf::_Int64Array_default_instance_);
}
inline ::itd::communication::protobuf::Int64Array* GeneralFree::release_data_i64() {
  // @@protoc_insertion_point(field_release:itd.communication.protobuf.GeneralFree.data_i64)
  
  ::itd::communication::protobuf::Int64Array* temp = data_i64_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  data_i64_ = NULL;
  return temp;
}
inline ::itd::communication::protobuf::Int64Array* GeneralFree::unsafe_arena_release_data_i64() {
  // @@protoc_insertion_point(field_unsafe_arena_release:itd.communication.protobuf.GeneralFree.data_i64)
  
  ::itd::communication::protobuf::Int64Array* temp = data_i64_;
  data_i64_ = NULL;
  return temp;
}
inline ::itd::communication::protobuf::Int64Array* GeneralFree::mutable_data_i64() {
  
  if (data_i64_ == NULL) {
    _slow_mutable_data_i64();
  }
  // @@protoc_insertion_point(field_mutable:itd.communication.protobuf.GeneralFree.data_i64)
  return data_i64_;
}
inline void GeneralFree::set_allocated_data_i64(::itd::communication::protobuf::Int64Array* data_i64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete data_i64_;
  }
  if (data_i64) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(data_i64);
    if (message_arena != submessage_arena) {
      data_i64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data_i64, submessage_arena);
    }
    
  } else {
    
  }
  data_i64_ = data_i64;
  // @@protoc_insertion_point(field_set_allocated:itd.communication.protobuf.GeneralFree.data_i64)
}

// .itd.communication.protobuf.Float32Array data_float32 = 4;
inline bool GeneralFree::has_data_float32() const {
  return this != internal_default_instance() && data_float32_ != NULL;
}
inline void GeneralFree::clear_data_float32() {
  if (GetArenaNoVirtual() == NULL && data_float32_ != NULL) {
    delete data_float32_;
  }
  data_float32_ = NULL;
}
inline const ::itd::communication::protobuf::Float32Array& GeneralFree::data_float32() const {
  const ::itd::communication::protobuf::Float32Array* p = data_float32_;
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.GeneralFree.data_float32)
  return p != NULL ? *p : *reinterpret_cast<const ::itd::communication::protobuf::Float32Array*>(
      &::itd::communication::protobuf::_Float32Array_default_instance_);
}
inline ::itd::communication::protobuf::Float32Array* GeneralFree::release_data_float32() {
  // @@protoc_insertion_point(field_release:itd.communication.protobuf.GeneralFree.data_float32)
  
  ::itd::communication::protobuf::Float32Array* temp = data_float32_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  data_float32_ = NULL;
  return temp;
}
inline ::itd::communication::protobuf::Float32Array* GeneralFree::unsafe_arena_release_data_float32() {
  // @@protoc_insertion_point(field_unsafe_arena_release:itd.communication.protobuf.GeneralFree.data_float32)
  
  ::itd::communication::protobuf::Float32Array* temp = data_float32_;
  data_float32_ = NULL;
  return temp;
}
inline ::itd::communication::protobuf::Float32Array* GeneralFree::mutable_data_float32() {
  
  if (data_float32_ == NULL) {
    _slow_mutable_data_float32();
  }
  // @@protoc_insertion_point(field_mutable:itd.communication.protobuf.GeneralFree.data_float32)
  return data_float32_;
}
inline void GeneralFree::set_allocated_data_float32(::itd::communication::protobuf::Float32Array* data_float32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete data_float32_;
  }
  if (data_float32) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(data_float32);
    if (message_arena != submessage_arena) {
      data_float32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data_float32, submessage_arena);
    }
    
  } else {
    
  }
  data_float32_ = data_float32;
  // @@protoc_insertion_point(field_set_allocated:itd.communication.protobuf.GeneralFree.data_float32)
}

// .itd.communication.protobuf.Float64Array data_float64 = 5;
inline bool GeneralFree::has_data_float64() const {
  return this != internal_default_instance() && data_float64_ != NULL;
}
inline void GeneralFree::clear_data_float64() {
  if (GetArenaNoVirtual() == NULL && data_float64_ != NULL) {
    delete data_float64_;
  }
  data_float64_ = NULL;
}
inline const ::itd::communication::protobuf::Float64Array& GeneralFree::data_float64() const {
  const ::itd::communication::protobuf::Float64Array* p = data_float64_;
  // @@protoc_insertion_point(field_get:itd.communication.protobuf.GeneralFree.data_float64)
  return p != NULL ? *p : *reinterpret_cast<const ::itd::communication::protobuf::Float64Array*>(
      &::itd::communication::protobuf::_Float64Array_default_instance_);
}
inline ::itd::communication::protobuf::Float64Array* GeneralFree::release_data_float64() {
  // @@protoc_insertion_point(field_release:itd.communication.protobuf.GeneralFree.data_float64)
  
  ::itd::communication::protobuf::Float64Array* temp = data_float64_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
  }
  data_float64_ = NULL;
  return temp;
}
inline ::itd::communication::protobuf::Float64Array* GeneralFree::unsafe_arena_release_data_float64() {
  // @@protoc_insertion_point(field_unsafe_arena_release:itd.communication.protobuf.GeneralFree.data_float64)
  
  ::itd::communication::protobuf::Float64Array* temp = data_float64_;
  data_float64_ = NULL;
  return temp;
}
inline ::itd::communication::protobuf::Float64Array* GeneralFree::mutable_data_float64() {
  
  if (data_float64_ == NULL) {
    _slow_mutable_data_float64();
  }
  // @@protoc_insertion_point(field_mutable:itd.communication.protobuf.GeneralFree.data_float64)
  return data_float64_;
}
inline void GeneralFree::set_allocated_data_float64(::itd::communication::protobuf::Float64Array* data_float64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete data_float64_;
  }
  if (data_float64) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(data_float64);
    if (message_arena != submessage_arena) {
      data_float64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data_float64, submessage_arena);
    }
    
  } else {
    
  }
  data_float64_ = data_float64;
  // @@protoc_insertion_point(field_set_allocated:itd.communication.protobuf.GeneralFree.data_float64)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace communication
}  // namespace itd

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_itd_5fipd_5fstd_5fmsgs_2eproto__INCLUDED
